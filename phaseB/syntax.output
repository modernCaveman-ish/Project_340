Terminals unused in grammar

    "_"
    "letter"
    "quote"
    "comment"
    "multiple comment"
    "nested comment"


State 149 conflicts: 1 shift/reduce


Grammar

    0 $accept: program "end of file"

    1 program: statements

    2 statements: statements stmt
    3           | %empty

    4 stmt: expr ";"
    5     | ifstmt
    6     | whilestmt
    7     | forstmt
    8     | returnstmt
    9     | "break" ";"
   10     | "continue" ";"
   11     | block
   12     | funcdef
   13     | ";"

   14 expr: assignexpr
   15     | expr ADD expr
   16     | expr SUB expr
   17     | expr MUL expr
   18     | expr DIV expr
   19     | expr MOD expr
   20     | expr EQ expr
   21     | expr DIF expr
   22     | expr AND expr
   23     | expr OR expr
   24     | expr GREQ expr
   25     | expr LESS expr
   26     | expr LESSEQ expr
   27     | expr GR expr
   28     | term

   29 term: "LEFT_PARENTHESIS" expr "RIGHT_PARENTHESIS"
   30     | SUB expr
   31     | NOTOP expr
   32     | INC lvalue
   33     | lvalue INC
   34     | DEC lvalue
   35     | lvalue DEC
   36     | primary

   37 assignexpr: lvalue ASSIGNMENT expr

   38 primary: lvalue
   39        | call
   40        | objectdef
   41        | "LEFT_PARENTHESIS" funcdef "RIGHT_PARENTHESIS"
   42        | const

   43 lvalue: ID
   44       | "local" ID
   45       | "::" ID
   46       | member

   47 member: lvalue "." ID
   48       | lvalue "LEFT_BRACKET" expr "RIGHT_BRACKET"
   49       | call "." ID
   50       | call "LEFT_BRACKET" expr "RIGHT_BRACKET"

   51 call: call "LEFT_PARENTHESIS" elist "RIGHT_PARENTHESIS"
   52     | lvalue callsuffix
   53     | "LEFT_PARENTHESIS" funcdef "RIGHT_PARENTHESIS" "LEFT_PARENTHESIS" elist "RIGHT_PARENTHESIS"

   54 callsuffix: normcall
   55           | methodcall

   56 normcall: "LEFT_PARENTHESIS" elist "RIGHT_PARENTHESIS"

   57 methodcall: ".." ID "LEFT_PARENTHESIS" elist "RIGHT_PARENTHESIS"

   58 elists: "," expr elists
   59       | %empty

   60 elist: expr elists
   61      | %empty

   62 objectdef: "LEFT_BRACKET" elist "RIGHT_BRACKET"
   63          | "LEFT_BRACKET" indexed "RIGHT_BRACKET"

   64 indexeds: indexeds "," indexedelem
   65         | %empty

   66 indexed: indexedelem indexeds

   67 indexedelem: "{" expr ":" expr "}"

   68 $@1: %empty

   69 block: "{" $@1 statements "}"

   70 $@2: %empty

   71 funcdef: "function" ID $@2 "LEFT_PARENTHESIS" idlist "RIGHT_PARENTHESIS" block

   72 $@3: %empty

   73 $@4: %empty

   74 funcdef: "function" "LEFT_PARENTHESIS" $@3 idlist "RIGHT_PARENTHESIS" $@4 block

   75 const: NUMBER
   76      | "string"
   77      | "nil"
   78      | "true"
   79      | "false"

   80 idlists: idlists "," ID
   81        | %empty

   82 idlist: ID idlists
   83       | %empty

   84 ifstmt: "if" "LEFT_PARENTHESIS" expr "RIGHT_PARENTHESIS" stmt
   85       | "if" "LEFT_PARENTHESIS" expr "RIGHT_PARENTHESIS" stmt "else" stmt

   86 whilestmt: "while" "LEFT_PARENTHESIS" expr "RIGHT_PARENTHESIS" stmt

   87 forstmt: "for" "LEFT_PARENTHESIS" elist ";" expr ";" elist "RIGHT_PARENTHESIS" stmt

   88 returnstmt: "return" ";"
   89           | "return" expr ";"


Terminals, with rules where they appear

    "end of file" <strval> (0) 0
    error (256)
    "if" <strval> (258) 84 85
    "else" <strval> (259) 85
    "while" <strval> (260) 86
    "for" <strval> (261) 87
    "function" <strval> (262) 71 74
    "return" <strval> (263) 88 89
    "break" <strval> (264) 9
    "continue" <strval> (265) 10
    "local" <strval> (266) 44
    "true" <strval> (267) 78
    "false" <strval> (268) 79
    "nil" <strval> (269) 77
    ASSIGNMENT <strval> (270) 37
    OR <strval> (271) 23
    AND <strval> (272) 22
    NOTOP <strval> (273) 31
    ADD <strval> (274) 15
    UMINUS <strVal> (275)
    SUB <strval> (276) 16 30
    MUL <strval> (277) 17
    DIV <strval> (278) 18
    MOD <strval> (279) 19
    EQ <strval> (280) 20
    DIF <strval> (281) 21
    INC <strval> (282) 32 33
    DEC <strval> (283) 34 35
    GR <strval> (284) 27
    GREQ <strval> (285) 24
    LESS <strval> (286) 25
    LESSEQ <strval> (287) 26
    "{" <strval> (288) 67 69
    "}" <strval> (289) 67 69
    "LEFT_BRACKET" <strval> (290) 48 50 62 63
    "RIGHT_BRACKET" <strval> (291) 48 50 62 63
    "RIGHT_PARENTHESIS" <strval> (292) 29 41 51 53 56 57 71 74 84 85 86 87
    "LEFT_PARENTHESIS" <strval> (293) 29 41 51 53 56 57 71 74 84 85 86 87
    ";" <strval> (294) 4 9 10 13 87 88 89
    "," <strval> (295) 58 64 80
    ":" <strval> (296) 67
    "::" <strval> (297) 45
    "." <strval> (298) 47 49
    ".." <strval> (299) 57
    "_" <strval> (300)
    NUMBER <strval> (301) 75
    "letter" <strval> (302)
    "quote" <strval> (303)
    "string" <strval> (304) 76
    "comment" <strval> (305)
    ID <strval> (306) 43 44 45 47 49 57 71 80 82
    "multiple comment" <strval> (307)
    "nested comment" <strval> (308)


Nonterminals, with rules where they appear

    $accept (54)
        on left: 0
    program <strval> (55)
        on left: 1
        on right: 0
    statements (56)
        on left: 2 3
        on right: 1 2 69
    stmt <strval> (57)
        on left: 4 5 6 7 8 9 10 11 12 13
        on right: 2 84 85 86 87
    expr <strval> (58)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
        on right: 4 15 16 17 18 19 20 21 22 23 24 25 26 27 29 30 31 37 48 50 58 60 67 84 85 86 87 89
    term <strval> (59)
        on left: 29 30 31 32 33 34 35 36
        on right: 28
    assignexpr <strval> (60)
        on left: 37
        on right: 14
    primary <strval> (61)
        on left: 38 39 40 41 42
        on right: 36
    lvalue <strval> (62)
        on left: 43 44 45 46
        on right: 32 33 34 35 37 38 47 48 52
    member <strval> (63)
        on left: 47 48 49 50
        on right: 46
    call <strval> (64)
        on left: 51 52 53
        on right: 39 49 50 51
    callsuffix <strval> (65)
        on left: 54 55
        on right: 52
    normcall <strval> (66)
        on left: 56
        on right: 54
    methodcall <strval> (67)
        on left: 57
        on right: 55
    elists <strval> (68)
        on left: 58 59
        on right: 58 60
    elist <strval> (69)
        on left: 60 61
        on right: 51 53 56 57 62 87
    objectdef <strval> (70)
        on left: 62 63
        on right: 40
    indexeds (71)
        on left: 64 65
        on right: 64 66
    indexed <strval> (72)
        on left: 66
        on right: 63
    indexedelem <strval> (73)
        on left: 67
        on right: 64 66
    block <strval> (74)
        on left: 69
        on right: 11 71 74
    $@1 (75)
        on left: 68
        on right: 69
    funcdef <strval> (76)
        on left: 71 74
        on right: 12 41 53
    $@2 (77)
        on left: 70
        on right: 71
    $@3 (78)
        on left: 72
        on right: 74
    $@4 (79)
        on left: 73
        on right: 74
    const <strval> (80)
        on left: 75 76 77 78 79
        on right: 42
    idlists (81)
        on left: 80 81
        on right: 80 82
    idlist <strval> (82)
        on left: 82 83
        on right: 71 74
    ifstmt <strval> (83)
        on left: 84 85
        on right: 5
    whilestmt <strval> (84)
        on left: 86
        on right: 6
    forstmt <strval> (85)
        on left: 87
        on right: 7
    returnstmt <strval> (86)
        on left: 88 89
        on right: 8


State 0

    0 $accept: . program "end of file"

    $default  reduce using rule 3 (statements)

    program     go to state 1
    statements  go to state 2


State 1

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 3


State 2

    1 program: statements .
    2 statements: statements . stmt

    "if"                shift, and go to state 4
    "while"             shift, and go to state 5
    "for"               shift, and go to state 6
    "function"          shift, and go to state 7
    "return"            shift, and go to state 8
    "break"             shift, and go to state 9
    "continue"          shift, and go to state 10
    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "{"                 shift, and go to state 19
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    ";"                 shift, and go to state 22
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    $default  reduce using rule 1 (program)

    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 3

    0 $accept: program "end of file" .

    $default  accept


State 4

   84 ifstmt: "if" . "LEFT_PARENTHESIS" expr "RIGHT_PARENTHESIS" stmt
   85       | "if" . "LEFT_PARENTHESIS" expr "RIGHT_PARENTHESIS" stmt "else" stmt

    "LEFT_PARENTHESIS"  shift, and go to state 43


State 5

   86 whilestmt: "while" . "LEFT_PARENTHESIS" expr "RIGHT_PARENTHESIS" stmt

    "LEFT_PARENTHESIS"  shift, and go to state 44


State 6

   87 forstmt: "for" . "LEFT_PARENTHESIS" elist ";" expr ";" elist "RIGHT_PARENTHESIS" stmt

    "LEFT_PARENTHESIS"  shift, and go to state 45


State 7

   71 funcdef: "function" . ID $@2 "LEFT_PARENTHESIS" idlist "RIGHT_PARENTHESIS" block
   74        | "function" . "LEFT_PARENTHESIS" $@3 idlist "RIGHT_PARENTHESIS" $@4 block

    "LEFT_PARENTHESIS"  shift, and go to state 46
    ID                  shift, and go to state 47


State 8

   88 returnstmt: "return" . ";"
   89           | "return" . expr ";"

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    ";"                 shift, and go to state 48
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 49
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 9

    9 stmt: "break" . ";"

    ";"  shift, and go to state 50


State 10

   10 stmt: "continue" . ";"

    ";"  shift, and go to state 51


State 11

   44 lvalue: "local" . ID

    ID  shift, and go to state 52


State 12

   78 const: "true" .

    $default  reduce using rule 78 (const)


State 13

   79 const: "false" .

    $default  reduce using rule 79 (const)


State 14

   77 const: "nil" .

    $default  reduce using rule 77 (const)


State 15

   31 term: NOTOP . expr

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 53
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 16

   30 term: SUB . expr

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 54
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 17

   32 term: INC . lvalue

    "local"             shift, and go to state 11
    "LEFT_PARENTHESIS"  shift, and go to state 55
    "::"                shift, and go to state 23
    ID                  shift, and go to state 26

    lvalue  go to state 56
    member  go to state 33
    call    go to state 57


State 18

   34 term: DEC . lvalue

    "local"             shift, and go to state 11
    "LEFT_PARENTHESIS"  shift, and go to state 55
    "::"                shift, and go to state 23
    ID                  shift, and go to state 26

    lvalue  go to state 58
    member  go to state 33
    call    go to state 57


State 19

   69 block: "{" . $@1 statements "}"

    $default  reduce using rule 68 ($@1)

    $@1  go to state 59


State 20

   62 objectdef: "LEFT_BRACKET" . elist "RIGHT_BRACKET"
   63          | "LEFT_BRACKET" . indexed "RIGHT_BRACKET"

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "{"                 shift, and go to state 60
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    $default  reduce using rule 61 (elist)

    expr         go to state 61
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    elist        go to state 62
    objectdef    go to state 35
    indexed      go to state 63
    indexedelem  go to state 64
    const        go to state 38


State 21

   29 term: "LEFT_PARENTHESIS" . expr "RIGHT_PARENTHESIS"
   41 primary: "LEFT_PARENTHESIS" . funcdef "RIGHT_PARENTHESIS"
   53 call: "LEFT_PARENTHESIS" . funcdef "RIGHT_PARENTHESIS" "LEFT_PARENTHESIS" elist "RIGHT_PARENTHESIS"

    "function"          shift, and go to state 7
    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 65
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    funcdef     go to state 66
    const       go to state 38


State 22

   13 stmt: ";" .

    $default  reduce using rule 13 (stmt)


State 23

   45 lvalue: "::" . ID

    ID  shift, and go to state 67


State 24

   75 const: NUMBER .

    $default  reduce using rule 75 (const)


State 25

   76 const: "string" .

    $default  reduce using rule 76 (const)


State 26

   43 lvalue: ID .

    $default  reduce using rule 43 (lvalue)


State 27

    2 statements: statements stmt .

    $default  reduce using rule 2 (statements)


State 28

    4 stmt: expr . ";"
   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    OR      shift, and go to state 68
    AND     shift, and go to state 69
    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    MOD     shift, and go to state 74
    EQ      shift, and go to state 75
    DIF     shift, and go to state 76
    GR      shift, and go to state 77
    GREQ    shift, and go to state 78
    LESS    shift, and go to state 79
    LESSEQ  shift, and go to state 80
    ";"     shift, and go to state 81


State 29

   28 expr: term .

    $default  reduce using rule 28 (expr)


State 30

   14 expr: assignexpr .

    $default  reduce using rule 14 (expr)


State 31

   36 term: primary .

    $default  reduce using rule 36 (term)


State 32

   33 term: lvalue . INC
   35     | lvalue . DEC
   37 assignexpr: lvalue . ASSIGNMENT expr
   38 primary: lvalue .
   47 member: lvalue . "." ID
   48       | lvalue . "LEFT_BRACKET" expr "RIGHT_BRACKET"
   52 call: lvalue . callsuffix

    ASSIGNMENT          shift, and go to state 82
    INC                 shift, and go to state 83
    DEC                 shift, and go to state 84
    "LEFT_BRACKET"      shift, and go to state 85
    "LEFT_PARENTHESIS"  shift, and go to state 86
    "."                 shift, and go to state 87
    ".."                shift, and go to state 88

    $default  reduce using rule 38 (primary)

    callsuffix  go to state 89
    normcall    go to state 90
    methodcall  go to state 91


State 33

   46 lvalue: member .

    $default  reduce using rule 46 (lvalue)


State 34

   39 primary: call .
   49 member: call . "." ID
   50       | call . "LEFT_BRACKET" expr "RIGHT_BRACKET"
   51 call: call . "LEFT_PARENTHESIS" elist "RIGHT_PARENTHESIS"

    "LEFT_BRACKET"      shift, and go to state 92
    "LEFT_PARENTHESIS"  shift, and go to state 93
    "."                 shift, and go to state 94

    $default  reduce using rule 39 (primary)


State 35

   40 primary: objectdef .

    $default  reduce using rule 40 (primary)


State 36

   11 stmt: block .

    $default  reduce using rule 11 (stmt)


State 37

   12 stmt: funcdef .

    $default  reduce using rule 12 (stmt)


State 38

   42 primary: const .

    $default  reduce using rule 42 (primary)


State 39

    5 stmt: ifstmt .

    $default  reduce using rule 5 (stmt)


State 40

    6 stmt: whilestmt .

    $default  reduce using rule 6 (stmt)


State 41

    7 stmt: forstmt .

    $default  reduce using rule 7 (stmt)


State 42

    8 stmt: returnstmt .

    $default  reduce using rule 8 (stmt)


State 43

   84 ifstmt: "if" "LEFT_PARENTHESIS" . expr "RIGHT_PARENTHESIS" stmt
   85       | "if" "LEFT_PARENTHESIS" . expr "RIGHT_PARENTHESIS" stmt "else" stmt

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 95
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 44

   86 whilestmt: "while" "LEFT_PARENTHESIS" . expr "RIGHT_PARENTHESIS" stmt

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 96
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 45

   87 forstmt: "for" "LEFT_PARENTHESIS" . elist ";" expr ";" elist "RIGHT_PARENTHESIS" stmt

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    $default  reduce using rule 61 (elist)

    expr        go to state 61
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 97
    objectdef   go to state 35
    const       go to state 38


State 46

   74 funcdef: "function" "LEFT_PARENTHESIS" . $@3 idlist "RIGHT_PARENTHESIS" $@4 block

    $default  reduce using rule 72 ($@3)

    $@3  go to state 98


State 47

   71 funcdef: "function" ID . $@2 "LEFT_PARENTHESIS" idlist "RIGHT_PARENTHESIS" block

    $default  reduce using rule 70 ($@2)

    $@2  go to state 99


State 48

   88 returnstmt: "return" ";" .

    $default  reduce using rule 88 (returnstmt)


State 49

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   89 returnstmt: "return" expr . ";"

    OR      shift, and go to state 68
    AND     shift, and go to state 69
    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    MOD     shift, and go to state 74
    EQ      shift, and go to state 75
    DIF     shift, and go to state 76
    GR      shift, and go to state 77
    GREQ    shift, and go to state 78
    LESS    shift, and go to state 79
    LESSEQ  shift, and go to state 80
    ";"     shift, and go to state 100


State 50

    9 stmt: "break" ";" .

    $default  reduce using rule 9 (stmt)


State 51

   10 stmt: "continue" ";" .

    $default  reduce using rule 10 (stmt)


State 52

   44 lvalue: "local" ID .

    $default  reduce using rule 44 (lvalue)


State 53

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   31 term: NOTOP expr .

    $default  reduce using rule 31 (term)


State 54

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   30 term: SUB expr .

    $default  reduce using rule 30 (term)


State 55

   53 call: "LEFT_PARENTHESIS" . funcdef "RIGHT_PARENTHESIS" "LEFT_PARENTHESIS" elist "RIGHT_PARENTHESIS"

    "function"  shift, and go to state 7

    funcdef  go to state 101


State 56

   32 term: INC lvalue .
   47 member: lvalue . "." ID
   48       | lvalue . "LEFT_BRACKET" expr "RIGHT_BRACKET"
   52 call: lvalue . callsuffix

    "LEFT_BRACKET"      shift, and go to state 85
    "LEFT_PARENTHESIS"  shift, and go to state 86
    "."                 shift, and go to state 87
    ".."                shift, and go to state 88

    $default  reduce using rule 32 (term)

    callsuffix  go to state 89
    normcall    go to state 90
    methodcall  go to state 91


State 57

   49 member: call . "." ID
   50       | call . "LEFT_BRACKET" expr "RIGHT_BRACKET"
   51 call: call . "LEFT_PARENTHESIS" elist "RIGHT_PARENTHESIS"

    "LEFT_BRACKET"      shift, and go to state 92
    "LEFT_PARENTHESIS"  shift, and go to state 93
    "."                 shift, and go to state 94


State 58

   34 term: DEC lvalue .
   47 member: lvalue . "." ID
   48       | lvalue . "LEFT_BRACKET" expr "RIGHT_BRACKET"
   52 call: lvalue . callsuffix

    "LEFT_BRACKET"      shift, and go to state 85
    "LEFT_PARENTHESIS"  shift, and go to state 86
    "."                 shift, and go to state 87
    ".."                shift, and go to state 88

    $default  reduce using rule 34 (term)

    callsuffix  go to state 89
    normcall    go to state 90
    methodcall  go to state 91


State 59

   69 block: "{" $@1 . statements "}"

    $default  reduce using rule 3 (statements)

    statements  go to state 102


State 60

   67 indexedelem: "{" . expr ":" expr "}"

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 103
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 61

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   60 elist: expr . elists

    OR      shift, and go to state 68
    AND     shift, and go to state 69
    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    MOD     shift, and go to state 74
    EQ      shift, and go to state 75
    DIF     shift, and go to state 76
    GR      shift, and go to state 77
    GREQ    shift, and go to state 78
    LESS    shift, and go to state 79
    LESSEQ  shift, and go to state 80
    ","     shift, and go to state 104

    $default  reduce using rule 59 (elists)

    elists  go to state 105


State 62

   62 objectdef: "LEFT_BRACKET" elist . "RIGHT_BRACKET"

    "RIGHT_BRACKET"  shift, and go to state 106


State 63

   63 objectdef: "LEFT_BRACKET" indexed . "RIGHT_BRACKET"

    "RIGHT_BRACKET"  shift, and go to state 107


State 64

   66 indexed: indexedelem . indexeds

    $default  reduce using rule 65 (indexeds)

    indexeds  go to state 108


State 65

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   29 term: "LEFT_PARENTHESIS" expr . "RIGHT_PARENTHESIS"

    OR                   shift, and go to state 68
    AND                  shift, and go to state 69
    ADD                  shift, and go to state 70
    SUB                  shift, and go to state 71
    MUL                  shift, and go to state 72
    DIV                  shift, and go to state 73
    MOD                  shift, and go to state 74
    EQ                   shift, and go to state 75
    DIF                  shift, and go to state 76
    GR                   shift, and go to state 77
    GREQ                 shift, and go to state 78
    LESS                 shift, and go to state 79
    LESSEQ               shift, and go to state 80
    "RIGHT_PARENTHESIS"  shift, and go to state 109


State 66

   41 primary: "LEFT_PARENTHESIS" funcdef . "RIGHT_PARENTHESIS"
   53 call: "LEFT_PARENTHESIS" funcdef . "RIGHT_PARENTHESIS" "LEFT_PARENTHESIS" elist "RIGHT_PARENTHESIS"

    "RIGHT_PARENTHESIS"  shift, and go to state 110


State 67

   45 lvalue: "::" ID .

    $default  reduce using rule 45 (lvalue)


State 68

   23 expr: expr OR . expr

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 111
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 69

   22 expr: expr AND . expr

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 112
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 70

   15 expr: expr ADD . expr

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 113
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 71

   16 expr: expr SUB . expr

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 114
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 72

   17 expr: expr MUL . expr

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 115
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 73

   18 expr: expr DIV . expr

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 116
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 74

   19 expr: expr MOD . expr

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 117
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 75

   20 expr: expr EQ . expr

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 118
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 76

   21 expr: expr DIF . expr

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 119
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 77

   27 expr: expr GR . expr

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 120
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 78

   24 expr: expr GREQ . expr

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 121
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 79

   25 expr: expr LESS . expr

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 122
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 80

   26 expr: expr LESSEQ . expr

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 123
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 81

    4 stmt: expr ";" .

    $default  reduce using rule 4 (stmt)


State 82

   37 assignexpr: lvalue ASSIGNMENT . expr

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 124
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 83

   33 term: lvalue INC .

    $default  reduce using rule 33 (term)


State 84

   35 term: lvalue DEC .

    $default  reduce using rule 35 (term)


State 85

   48 member: lvalue "LEFT_BRACKET" . expr "RIGHT_BRACKET"

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 125
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 86

   56 normcall: "LEFT_PARENTHESIS" . elist "RIGHT_PARENTHESIS"

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    $default  reduce using rule 61 (elist)

    expr        go to state 61
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 126
    objectdef   go to state 35
    const       go to state 38


State 87

   47 member: lvalue "." . ID

    ID  shift, and go to state 127


State 88

   57 methodcall: ".." . ID "LEFT_PARENTHESIS" elist "RIGHT_PARENTHESIS"

    ID  shift, and go to state 128


State 89

   52 call: lvalue callsuffix .

    $default  reduce using rule 52 (call)


State 90

   54 callsuffix: normcall .

    $default  reduce using rule 54 (callsuffix)


State 91

   55 callsuffix: methodcall .

    $default  reduce using rule 55 (callsuffix)


State 92

   50 member: call "LEFT_BRACKET" . expr "RIGHT_BRACKET"

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 129
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 93

   51 call: call "LEFT_PARENTHESIS" . elist "RIGHT_PARENTHESIS"

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    $default  reduce using rule 61 (elist)

    expr        go to state 61
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 130
    objectdef   go to state 35
    const       go to state 38


State 94

   49 member: call "." . ID

    ID  shift, and go to state 131


State 95

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   84 ifstmt: "if" "LEFT_PARENTHESIS" expr . "RIGHT_PARENTHESIS" stmt
   85       | "if" "LEFT_PARENTHESIS" expr . "RIGHT_PARENTHESIS" stmt "else" stmt

    OR                   shift, and go to state 68
    AND                  shift, and go to state 69
    ADD                  shift, and go to state 70
    SUB                  shift, and go to state 71
    MUL                  shift, and go to state 72
    DIV                  shift, and go to state 73
    MOD                  shift, and go to state 74
    EQ                   shift, and go to state 75
    DIF                  shift, and go to state 76
    GR                   shift, and go to state 77
    GREQ                 shift, and go to state 78
    LESS                 shift, and go to state 79
    LESSEQ               shift, and go to state 80
    "RIGHT_PARENTHESIS"  shift, and go to state 132


State 96

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   86 whilestmt: "while" "LEFT_PARENTHESIS" expr . "RIGHT_PARENTHESIS" stmt

    OR                   shift, and go to state 68
    AND                  shift, and go to state 69
    ADD                  shift, and go to state 70
    SUB                  shift, and go to state 71
    MUL                  shift, and go to state 72
    DIV                  shift, and go to state 73
    MOD                  shift, and go to state 74
    EQ                   shift, and go to state 75
    DIF                  shift, and go to state 76
    GR                   shift, and go to state 77
    GREQ                 shift, and go to state 78
    LESS                 shift, and go to state 79
    LESSEQ               shift, and go to state 80
    "RIGHT_PARENTHESIS"  shift, and go to state 133


State 97

   87 forstmt: "for" "LEFT_PARENTHESIS" elist . ";" expr ";" elist "RIGHT_PARENTHESIS" stmt

    ";"  shift, and go to state 134


State 98

   74 funcdef: "function" "LEFT_PARENTHESIS" $@3 . idlist "RIGHT_PARENTHESIS" $@4 block

    ID  shift, and go to state 135

    $default  reduce using rule 83 (idlist)

    idlist  go to state 136


State 99

   71 funcdef: "function" ID $@2 . "LEFT_PARENTHESIS" idlist "RIGHT_PARENTHESIS" block

    "LEFT_PARENTHESIS"  shift, and go to state 137


State 100

   89 returnstmt: "return" expr ";" .

    $default  reduce using rule 89 (returnstmt)


State 101

   53 call: "LEFT_PARENTHESIS" funcdef . "RIGHT_PARENTHESIS" "LEFT_PARENTHESIS" elist "RIGHT_PARENTHESIS"

    "RIGHT_PARENTHESIS"  shift, and go to state 138


State 102

    2 statements: statements . stmt
   69 block: "{" $@1 statements . "}"

    "if"                shift, and go to state 4
    "while"             shift, and go to state 5
    "for"               shift, and go to state 6
    "function"          shift, and go to state 7
    "return"            shift, and go to state 8
    "break"             shift, and go to state 9
    "continue"          shift, and go to state 10
    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "{"                 shift, and go to state 19
    "}"                 shift, and go to state 139
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    ";"                 shift, and go to state 22
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 103

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   67 indexedelem: "{" expr . ":" expr "}"

    OR      shift, and go to state 68
    AND     shift, and go to state 69
    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    MOD     shift, and go to state 74
    EQ      shift, and go to state 75
    DIF     shift, and go to state 76
    GR      shift, and go to state 77
    GREQ    shift, and go to state 78
    LESS    shift, and go to state 79
    LESSEQ  shift, and go to state 80
    ":"     shift, and go to state 140


State 104

   58 elists: "," . expr elists

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 141
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 105

   60 elist: expr elists .

    $default  reduce using rule 60 (elist)


State 106

   62 objectdef: "LEFT_BRACKET" elist "RIGHT_BRACKET" .

    $default  reduce using rule 62 (objectdef)


State 107

   63 objectdef: "LEFT_BRACKET" indexed "RIGHT_BRACKET" .

    $default  reduce using rule 63 (objectdef)


State 108

   64 indexeds: indexeds . "," indexedelem
   66 indexed: indexedelem indexeds .

    ","  shift, and go to state 142

    $default  reduce using rule 66 (indexed)


State 109

   29 term: "LEFT_PARENTHESIS" expr "RIGHT_PARENTHESIS" .

    $default  reduce using rule 29 (term)


State 110

   41 primary: "LEFT_PARENTHESIS" funcdef "RIGHT_PARENTHESIS" .
   53 call: "LEFT_PARENTHESIS" funcdef "RIGHT_PARENTHESIS" . "LEFT_PARENTHESIS" elist "RIGHT_PARENTHESIS"

    "LEFT_PARENTHESIS"  shift, and go to state 143

    $default  reduce using rule 41 (primary)


State 111

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   23     | expr OR expr .
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    AND     shift, and go to state 69
    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    MOD     shift, and go to state 74
    EQ      shift, and go to state 75
    DIF     shift, and go to state 76
    GR      shift, and go to state 77
    GREQ    shift, and go to state 78
    LESS    shift, and go to state 79
    LESSEQ  shift, and go to state 80

    $default  reduce using rule 23 (expr)


State 112

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   22     | expr AND expr .
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    MOD     shift, and go to state 74
    EQ      shift, and go to state 75
    DIF     shift, and go to state 76
    GR      shift, and go to state 77
    GREQ    shift, and go to state 78
    LESS    shift, and go to state 79
    LESSEQ  shift, and go to state 80

    $default  reduce using rule 22 (expr)


State 113

   15 expr: expr . ADD expr
   15     | expr ADD expr .
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    MUL  shift, and go to state 72
    DIV  shift, and go to state 73
    MOD  shift, and go to state 74

    $default  reduce using rule 15 (expr)


State 114

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   16     | expr SUB expr .
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    MUL  shift, and go to state 72
    DIV  shift, and go to state 73
    MOD  shift, and go to state 74

    $default  reduce using rule 16 (expr)


State 115

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   17     | expr MUL expr .
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    $default  reduce using rule 17 (expr)


State 116

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   18     | expr DIV expr .
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    $default  reduce using rule 18 (expr)


State 117

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   19     | expr MOD expr .
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    $default  reduce using rule 19 (expr)


State 118

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   20     | expr EQ expr .
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    MOD     shift, and go to state 74
    GR      shift, and go to state 77
    GREQ    shift, and go to state 78
    LESS    shift, and go to state 79
    LESSEQ  shift, and go to state 80

    EQ   error (nonassociative)
    DIF  error (nonassociative)

    $default  reduce using rule 20 (expr)


State 119

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   21     | expr DIF expr .
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    MOD     shift, and go to state 74
    GR      shift, and go to state 77
    GREQ    shift, and go to state 78
    LESS    shift, and go to state 79
    LESSEQ  shift, and go to state 80

    EQ   error (nonassociative)
    DIF  error (nonassociative)

    $default  reduce using rule 21 (expr)


State 120

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   27     | expr GR expr .

    ADD  shift, and go to state 70
    SUB  shift, and go to state 71
    MUL  shift, and go to state 72
    DIV  shift, and go to state 73
    MOD  shift, and go to state 74

    GR      error (nonassociative)
    GREQ    error (nonassociative)
    LESS    error (nonassociative)
    LESSEQ  error (nonassociative)

    $default  reduce using rule 27 (expr)


State 121

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   24     | expr GREQ expr .
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    ADD  shift, and go to state 70
    SUB  shift, and go to state 71
    MUL  shift, and go to state 72
    DIV  shift, and go to state 73
    MOD  shift, and go to state 74

    GR      error (nonassociative)
    GREQ    error (nonassociative)
    LESS    error (nonassociative)
    LESSEQ  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 122

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   25     | expr LESS expr .
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    ADD  shift, and go to state 70
    SUB  shift, and go to state 71
    MUL  shift, and go to state 72
    DIV  shift, and go to state 73
    MOD  shift, and go to state 74

    GR      error (nonassociative)
    GREQ    error (nonassociative)
    LESS    error (nonassociative)
    LESSEQ  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 123

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   26     | expr LESSEQ expr .
   27     | expr . GR expr

    ADD  shift, and go to state 70
    SUB  shift, and go to state 71
    MUL  shift, and go to state 72
    DIV  shift, and go to state 73
    MOD  shift, and go to state 74

    GR      error (nonassociative)
    GREQ    error (nonassociative)
    LESS    error (nonassociative)
    LESSEQ  error (nonassociative)

    $default  reduce using rule 26 (expr)


State 124

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   37 assignexpr: lvalue ASSIGNMENT expr .

    OR      shift, and go to state 68
    AND     shift, and go to state 69
    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    MOD     shift, and go to state 74
    EQ      shift, and go to state 75
    DIF     shift, and go to state 76
    GR      shift, and go to state 77
    GREQ    shift, and go to state 78
    LESS    shift, and go to state 79
    LESSEQ  shift, and go to state 80

    $default  reduce using rule 37 (assignexpr)


State 125

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   48 member: lvalue "LEFT_BRACKET" expr . "RIGHT_BRACKET"

    OR               shift, and go to state 68
    AND              shift, and go to state 69
    ADD              shift, and go to state 70
    SUB              shift, and go to state 71
    MUL              shift, and go to state 72
    DIV              shift, and go to state 73
    MOD              shift, and go to state 74
    EQ               shift, and go to state 75
    DIF              shift, and go to state 76
    GR               shift, and go to state 77
    GREQ             shift, and go to state 78
    LESS             shift, and go to state 79
    LESSEQ           shift, and go to state 80
    "RIGHT_BRACKET"  shift, and go to state 144


State 126

   56 normcall: "LEFT_PARENTHESIS" elist . "RIGHT_PARENTHESIS"

    "RIGHT_PARENTHESIS"  shift, and go to state 145


State 127

   47 member: lvalue "." ID .

    $default  reduce using rule 47 (member)


State 128

   57 methodcall: ".." ID . "LEFT_PARENTHESIS" elist "RIGHT_PARENTHESIS"

    "LEFT_PARENTHESIS"  shift, and go to state 146


State 129

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   50 member: call "LEFT_BRACKET" expr . "RIGHT_BRACKET"

    OR               shift, and go to state 68
    AND              shift, and go to state 69
    ADD              shift, and go to state 70
    SUB              shift, and go to state 71
    MUL              shift, and go to state 72
    DIV              shift, and go to state 73
    MOD              shift, and go to state 74
    EQ               shift, and go to state 75
    DIF              shift, and go to state 76
    GR               shift, and go to state 77
    GREQ             shift, and go to state 78
    LESS             shift, and go to state 79
    LESSEQ           shift, and go to state 80
    "RIGHT_BRACKET"  shift, and go to state 147


State 130

   51 call: call "LEFT_PARENTHESIS" elist . "RIGHT_PARENTHESIS"

    "RIGHT_PARENTHESIS"  shift, and go to state 148


State 131

   49 member: call "." ID .

    $default  reduce using rule 49 (member)


State 132

   84 ifstmt: "if" "LEFT_PARENTHESIS" expr "RIGHT_PARENTHESIS" . stmt
   85       | "if" "LEFT_PARENTHESIS" expr "RIGHT_PARENTHESIS" . stmt "else" stmt

    "if"                shift, and go to state 4
    "while"             shift, and go to state 5
    "for"               shift, and go to state 6
    "function"          shift, and go to state 7
    "return"            shift, and go to state 8
    "break"             shift, and go to state 9
    "continue"          shift, and go to state 10
    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "{"                 shift, and go to state 19
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    ";"                 shift, and go to state 22
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    stmt        go to state 149
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 133

   86 whilestmt: "while" "LEFT_PARENTHESIS" expr "RIGHT_PARENTHESIS" . stmt

    "if"                shift, and go to state 4
    "while"             shift, and go to state 5
    "for"               shift, and go to state 6
    "function"          shift, and go to state 7
    "return"            shift, and go to state 8
    "break"             shift, and go to state 9
    "continue"          shift, and go to state 10
    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "{"                 shift, and go to state 19
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    ";"                 shift, and go to state 22
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    stmt        go to state 150
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 134

   87 forstmt: "for" "LEFT_PARENTHESIS" elist ";" . expr ";" elist "RIGHT_PARENTHESIS" stmt

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 151
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 135

   82 idlist: ID . idlists

    $default  reduce using rule 81 (idlists)

    idlists  go to state 152


State 136

   74 funcdef: "function" "LEFT_PARENTHESIS" $@3 idlist . "RIGHT_PARENTHESIS" $@4 block

    "RIGHT_PARENTHESIS"  shift, and go to state 153


State 137

   71 funcdef: "function" ID $@2 "LEFT_PARENTHESIS" . idlist "RIGHT_PARENTHESIS" block

    ID  shift, and go to state 135

    $default  reduce using rule 83 (idlist)

    idlist  go to state 154


State 138

   53 call: "LEFT_PARENTHESIS" funcdef "RIGHT_PARENTHESIS" . "LEFT_PARENTHESIS" elist "RIGHT_PARENTHESIS"

    "LEFT_PARENTHESIS"  shift, and go to state 143


State 139

   69 block: "{" $@1 statements "}" .

    $default  reduce using rule 69 (block)


State 140

   67 indexedelem: "{" expr ":" . expr "}"

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    expr        go to state 155
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 141

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   58 elists: "," expr . elists

    OR      shift, and go to state 68
    AND     shift, and go to state 69
    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    MOD     shift, and go to state 74
    EQ      shift, and go to state 75
    DIF     shift, and go to state 76
    GR      shift, and go to state 77
    GREQ    shift, and go to state 78
    LESS    shift, and go to state 79
    LESSEQ  shift, and go to state 80
    ","     shift, and go to state 104

    $default  reduce using rule 59 (elists)

    elists  go to state 156


State 142

   64 indexeds: indexeds "," . indexedelem

    "{"  shift, and go to state 60

    indexedelem  go to state 157


State 143

   53 call: "LEFT_PARENTHESIS" funcdef "RIGHT_PARENTHESIS" "LEFT_PARENTHESIS" . elist "RIGHT_PARENTHESIS"

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    $default  reduce using rule 61 (elist)

    expr        go to state 61
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 158
    objectdef   go to state 35
    const       go to state 38


State 144

   48 member: lvalue "LEFT_BRACKET" expr "RIGHT_BRACKET" .

    $default  reduce using rule 48 (member)


State 145

   56 normcall: "LEFT_PARENTHESIS" elist "RIGHT_PARENTHESIS" .

    $default  reduce using rule 56 (normcall)


State 146

   57 methodcall: ".." ID "LEFT_PARENTHESIS" . elist "RIGHT_PARENTHESIS"

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    $default  reduce using rule 61 (elist)

    expr        go to state 61
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 159
    objectdef   go to state 35
    const       go to state 38


State 147

   50 member: call "LEFT_BRACKET" expr "RIGHT_BRACKET" .

    $default  reduce using rule 50 (member)


State 148

   51 call: call "LEFT_PARENTHESIS" elist "RIGHT_PARENTHESIS" .

    $default  reduce using rule 51 (call)


State 149

   84 ifstmt: "if" "LEFT_PARENTHESIS" expr "RIGHT_PARENTHESIS" stmt .
   85       | "if" "LEFT_PARENTHESIS" expr "RIGHT_PARENTHESIS" stmt . "else" stmt

    "else"  shift, and go to state 160

    "else"    [reduce using rule 84 (ifstmt)]
    $default  reduce using rule 84 (ifstmt)


State 150

   86 whilestmt: "while" "LEFT_PARENTHESIS" expr "RIGHT_PARENTHESIS" stmt .

    $default  reduce using rule 86 (whilestmt)


State 151

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   87 forstmt: "for" "LEFT_PARENTHESIS" elist ";" expr . ";" elist "RIGHT_PARENTHESIS" stmt

    OR      shift, and go to state 68
    AND     shift, and go to state 69
    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    MOD     shift, and go to state 74
    EQ      shift, and go to state 75
    DIF     shift, and go to state 76
    GR      shift, and go to state 77
    GREQ    shift, and go to state 78
    LESS    shift, and go to state 79
    LESSEQ  shift, and go to state 80
    ";"     shift, and go to state 161


State 152

   80 idlists: idlists . "," ID
   82 idlist: ID idlists .

    ","  shift, and go to state 162

    $default  reduce using rule 82 (idlist)


State 153

   74 funcdef: "function" "LEFT_PARENTHESIS" $@3 idlist "RIGHT_PARENTHESIS" . $@4 block

    $default  reduce using rule 73 ($@4)

    $@4  go to state 163


State 154

   71 funcdef: "function" ID $@2 "LEFT_PARENTHESIS" idlist . "RIGHT_PARENTHESIS" block

    "RIGHT_PARENTHESIS"  shift, and go to state 164


State 155

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   67 indexedelem: "{" expr ":" expr . "}"

    OR      shift, and go to state 68
    AND     shift, and go to state 69
    ADD     shift, and go to state 70
    SUB     shift, and go to state 71
    MUL     shift, and go to state 72
    DIV     shift, and go to state 73
    MOD     shift, and go to state 74
    EQ      shift, and go to state 75
    DIF     shift, and go to state 76
    GR      shift, and go to state 77
    GREQ    shift, and go to state 78
    LESS    shift, and go to state 79
    LESSEQ  shift, and go to state 80
    "}"     shift, and go to state 165


State 156

   58 elists: "," expr elists .

    $default  reduce using rule 58 (elists)


State 157

   64 indexeds: indexeds "," indexedelem .

    $default  reduce using rule 64 (indexeds)


State 158

   53 call: "LEFT_PARENTHESIS" funcdef "RIGHT_PARENTHESIS" "LEFT_PARENTHESIS" elist . "RIGHT_PARENTHESIS"

    "RIGHT_PARENTHESIS"  shift, and go to state 166


State 159

   57 methodcall: ".." ID "LEFT_PARENTHESIS" elist . "RIGHT_PARENTHESIS"

    "RIGHT_PARENTHESIS"  shift, and go to state 167


State 160

   85 ifstmt: "if" "LEFT_PARENTHESIS" expr "RIGHT_PARENTHESIS" stmt "else" . stmt

    "if"                shift, and go to state 4
    "while"             shift, and go to state 5
    "for"               shift, and go to state 6
    "function"          shift, and go to state 7
    "return"            shift, and go to state 8
    "break"             shift, and go to state 9
    "continue"          shift, and go to state 10
    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "{"                 shift, and go to state 19
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    ";"                 shift, and go to state 22
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    stmt        go to state 168
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 161

   87 forstmt: "for" "LEFT_PARENTHESIS" elist ";" expr ";" . elist "RIGHT_PARENTHESIS" stmt

    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    $default  reduce using rule 61 (elist)

    expr        go to state 61
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 169
    objectdef   go to state 35
    const       go to state 38


State 162

   80 idlists: idlists "," . ID

    ID  shift, and go to state 170


State 163

   74 funcdef: "function" "LEFT_PARENTHESIS" $@3 idlist "RIGHT_PARENTHESIS" $@4 . block

    "{"  shift, and go to state 19

    block  go to state 171


State 164

   71 funcdef: "function" ID $@2 "LEFT_PARENTHESIS" idlist "RIGHT_PARENTHESIS" . block

    "{"  shift, and go to state 19

    block  go to state 172


State 165

   67 indexedelem: "{" expr ":" expr "}" .

    $default  reduce using rule 67 (indexedelem)


State 166

   53 call: "LEFT_PARENTHESIS" funcdef "RIGHT_PARENTHESIS" "LEFT_PARENTHESIS" elist "RIGHT_PARENTHESIS" .

    $default  reduce using rule 53 (call)


State 167

   57 methodcall: ".." ID "LEFT_PARENTHESIS" elist "RIGHT_PARENTHESIS" .

    $default  reduce using rule 57 (methodcall)


State 168

   85 ifstmt: "if" "LEFT_PARENTHESIS" expr "RIGHT_PARENTHESIS" stmt "else" stmt .

    $default  reduce using rule 85 (ifstmt)


State 169

   87 forstmt: "for" "LEFT_PARENTHESIS" elist ";" expr ";" elist . "RIGHT_PARENTHESIS" stmt

    "RIGHT_PARENTHESIS"  shift, and go to state 173


State 170

   80 idlists: idlists "," ID .

    $default  reduce using rule 80 (idlists)


State 171

   74 funcdef: "function" "LEFT_PARENTHESIS" $@3 idlist "RIGHT_PARENTHESIS" $@4 block .

    $default  reduce using rule 74 (funcdef)


State 172

   71 funcdef: "function" ID $@2 "LEFT_PARENTHESIS" idlist "RIGHT_PARENTHESIS" block .

    $default  reduce using rule 71 (funcdef)


State 173

   87 forstmt: "for" "LEFT_PARENTHESIS" elist ";" expr ";" elist "RIGHT_PARENTHESIS" . stmt

    "if"                shift, and go to state 4
    "while"             shift, and go to state 5
    "for"               shift, and go to state 6
    "function"          shift, and go to state 7
    "return"            shift, and go to state 8
    "break"             shift, and go to state 9
    "continue"          shift, and go to state 10
    "local"             shift, and go to state 11
    "true"              shift, and go to state 12
    "false"             shift, and go to state 13
    "nil"               shift, and go to state 14
    NOTOP               shift, and go to state 15
    SUB                 shift, and go to state 16
    INC                 shift, and go to state 17
    DEC                 shift, and go to state 18
    "{"                 shift, and go to state 19
    "LEFT_BRACKET"      shift, and go to state 20
    "LEFT_PARENTHESIS"  shift, and go to state 21
    ";"                 shift, and go to state 22
    "::"                shift, and go to state 23
    NUMBER              shift, and go to state 24
    "string"            shift, and go to state 25
    ID                  shift, and go to state 26

    stmt        go to state 174
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 174

   87 forstmt: "for" "LEFT_PARENTHESIS" elist ";" expr ";" elist "RIGHT_PARENTHESIS" stmt .

    $default  reduce using rule 87 (forstmt)
