Terminals unused in grammar

    "_"
    "comment"
    "multiple comment"
    "nested comment"


State 100 conflicts: 1 shift/reduce


Grammar

    0 $accept: program "end of file"

    1 program: statements

    2 statements: statements stmt
    3           | %empty

    4 stmt: expr ";"
    5     | if
    6     | while
    7     | for
    8     | returnstmt
    9     | BREAK ";"
   10     | CONTINUE ";"
   11     | block
   12     | funcdef
   13     | ";"

   14 expr: assignexpr
   15     | expr ADD expr
   16     | expr SUB expr
   17     | expr MUL expr
   18     | expr DIV expr
   19     | expr MOD expr
   20     | expr EQ expr
   21     | expr DIF expr
   22     | expr AND expr
   23     | expr OR expr
   24     | expr GREQ expr
   25     | expr LESS expr
   26     | expr LESSEQ expr
   27     | expr GR expr
   28     | term

   29 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS
   30     | SUB expr
   31     | NOTOP expr
   32     | INC lvalue
   33     | lvalue INC
   34     | DEC lvalue
   35     | lvalue DEC
   36     | primary

   37 assignexpr: lvalue ASSIGNMENT expr

   38 primary: lvalue
   39        | call
   40        | objectdef
   41        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   42        | const

   43 lvalue: ID
   44       | LOCAL ID
   45       | "::" ID
   46       | member

   47 member: lvalue "." ID
   48       | lvalue "LEFT_BRACKET" expr "RIGHT_BRACKET"
   49       | call "." ID2
   50       | call "LEFT_BRACKET" expr "RIGHT_BRACKET"

   51 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   52     | lvalue callsuffix
   53     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   54 callsuffix: normcall
   55           | methodcall

   56 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   57 ID2: ID

   58 methodcall: ".." ID2 LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   59 elists: "," expr elists
   60       | %empty

   61 elist: expr elists
   62      | %empty

   63 objectdef: "LEFT_BRACKET" elist "RIGHT_BRACKET"
   64          | "LEFT_BRACKET" indexed "RIGHT_BRACKET"

   65 indexeds: indexeds "," indexedelem
   66         | %empty

   67 indexed: indexedelem indexeds

   68 indexedelem: "{" expr ":" expr "}"

   69 $@1: %empty

   70 block: "{" $@1 statements "}"

   71 funcname: ID
   72         | %empty

   73 funcprefix: FUNCTION funcname

   74 $@2: %empty

   75 funcargs: LEFT_PARENTHESIS $@2 idlist RIGHT_PARENTHESIS

   76 funcbody: block

   77 funcdef: funcprefix funcargs funcbody

   78 const: NUMBER
   79      | "string"
   80      | NIL
   81      | TRUE
   82      | FALSE

   83 idlists: idlists "," ID
   84        | %empty

   85 $@3: %empty

   86 idlist: ID $@3 idlists
   87       | %empty

   88 ifprefix: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

   89 if: ifprefix stmt

   90 elseprefix: ELSE

   91 if: ifprefix stmt elseprefix stmt

   92 loopstart: %empty

   93 loopend: %empty

   94 loopstmt: loopstart stmt loopend

   95 whilestart: WHILE

   96 whilecond: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

   97 while: whilestart whilecond loopstmt

   98 N: %empty

   99 M: %empty

  100 forprefix: FOR LEFT_PARENTHESIS elist ";" M expr ";"

  101 for: forprefix N elist RIGHT_PARENTHESIS N loopstmt N

  102 returnstmt: RETURN ";"
  103           | RETURN expr ";"


Terminals, with rules where they appear

    "end of file" <strval> (0) 0
    error (256)
    IF <strval> (258) 88
    ELSE (259) 90
    WHILE (260) 95
    FOR (261) 100
    FUNCTION (262) 73
    RETURN (263) 102 103
    BREAK (264) 9
    CONTINUE (265) 10
    LOCAL (266) 44
    TRUE (267) 81
    FALSE (268) 82
    NIL (269) 80
    NUMBER <realValue> (270) 78
    ASSIGNMENT (271) 37
    AND (272) 22
    OR (273) 23
    NOTOP (274) 31
    ADD (275) 15
    UMINUS (276)
    SUB (277) 16 30
    MUL (278) 17
    DIV (279) 18
    MOD (280) 19
    EQ (281) 20
    DIF (282) 21
    INC (283) 32 33
    DEC (284) 34 35
    GR (285) 27
    GREQ (286) 24
    LESS (287) 25
    LESSEQ (288) 26
    "{" (289) 68 70
    "}" (290) 68 70
    "LEFT_BRACKET" (291) 48 50 63 64
    "RIGHT_BRACKET" (292) 48 50 63 64
    RIGHT_PARENTHESIS (293) 29 41 51 53 56 58 75 88 96 101
    LEFT_PARENTHESIS (294) 29 41 51 53 56 58 75 88 96 100
    ";" (295) 4 9 10 13 100 102 103
    "," (296) 59 65 83
    ":" (297) 68
    "::" (298) 45
    "." (299) 47 49
    ".." (300) 58
    "_" (301)
    "string" <strval> (302) 79
    "comment" <strval> (303)
    ID <strval> (304) 43 44 45 47 57 71 83 86
    "multiple comment" <strval> (305)
    "nested comment" <strval> (306)


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    program (53)
        on left: 1
        on right: 0
    statements <stmt_t> (54)
        on left: 2 3
        on right: 1 2 70
    stmt <stmt_t> (55)
        on left: 4 5 6 7 8 9 10 11 12 13
        on right: 2 89 91 94
    expr <exprvalue> (56)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
        on right: 4 15 16 17 18 19 20 21 22 23 24 25 26 27 29 30 31 37 48 50 59 61 68 88 96 100 103
    term <exprvalue> (57)
        on left: 29 30 31 32 33 34 35 36
        on right: 28
    assignexpr <exprvalue> (58)
        on left: 37
        on right: 14
    primary <exprvalue> (59)
        on left: 38 39 40 41 42
        on right: 36
    lvalue <exprvalue> (60)
        on left: 43 44 45 46
        on right: 32 33 34 35 37 38 47 48 52
    member <exprvalue> (61)
        on left: 47 48 49 50
        on right: 46
    call <exprvalue> (62)
        on left: 51 52 53
        on right: 39 49 50 51
    callsuffix <callvalue> (63)
        on left: 54 55
        on right: 52
    normcall <callvalue> (64)
        on left: 56
        on right: 54
    ID2 <strval> (65)
        on left: 57
        on right: 49 58
    methodcall <callvalue> (66)
        on left: 58
        on right: 55
    elists <exprvalue> (67)
        on left: 59 60
        on right: 59 61
    elist <exprvalue> (68)
        on left: 61 62
        on right: 51 53 56 58 63 100 101
    objectdef <exprvalue> (69)
        on left: 63 64
        on right: 40
    indexeds <exprvalue> (70)
        on left: 65 66
        on right: 65 67
    indexed <exprvalue> (71)
        on left: 67
        on right: 64
    indexedelem <exprvalue> (72)
        on left: 68
        on right: 65 67
    block <stmt_t> (73)
        on left: 70
        on right: 11 76
    $@1 (74)
        on left: 69
        on right: 70
    funcname <strval> (75)
        on left: 71 72
        on right: 73
    funcprefix <symbolvalue> (76)
        on left: 73
        on right: 77
    funcargs (77)
        on left: 75
        on right: 77
    $@2 (78)
        on left: 74
        on right: 75
    funcbody <intValue> (79)
        on left: 76
        on right: 77
    funcdef <symbolvalue> (80)
        on left: 77
        on right: 12 41 53
    const <exprvalue> (81)
        on left: 78 79 80 81 82
        on right: 42
    idlists (82)
        on left: 83 84
        on right: 83 86
    idlist (83)
        on left: 86 87
        on right: 75
    $@3 (84)
        on left: 85
        on right: 86
    ifprefix <intValue> (85)
        on left: 88
        on right: 89 91
    if (86)
        on left: 89 91
        on right: 5
    elseprefix <intValue> (87)
        on left: 90
        on right: 91
    loopstart (88)
        on left: 92
        on right: 94
    loopend (89)
        on left: 93
        on right: 94
    loopstmt <stmt_t> (90)
        on left: 94
        on right: 97 101
    whilestart <intValue> (91)
        on left: 95
        on right: 97
    whilecond <intValue> (92)
        on left: 96
        on right: 97
    while (93)
        on left: 97
        on right: 6
    N <intValue> (94)
        on left: 98
        on right: 101
    M <intValue> (95)
        on left: 99
        on right: 100
    forprefix <forvalue> (96)
        on left: 100
        on right: 101
    for (97)
        on left: 101
        on right: 7
    returnstmt (98)
        on left: 102 103
        on right: 8


State 0

    0 $accept: . program "end of file"

    $default  reduce using rule 3 (statements)

    program     go to state 1
    statements  go to state 2


State 1

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 3


State 2

    1 program: statements .
    2 statements: statements . stmt

    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "{"               shift, and go to state 20
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    ";"               shift, and go to state 23
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 1 (program)

    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    if          go to state 41
    whilestart  go to state 42
    while       go to state 43
    forprefix   go to state 44
    for         go to state 45
    returnstmt  go to state 46


State 3

    0 $accept: program "end of file" .

    $default  accept


State 4

   88 ifprefix: IF . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 47


State 5

   95 whilestart: WHILE .

    $default  reduce using rule 95 (whilestart)


State 6

  100 forprefix: FOR . LEFT_PARENTHESIS elist ";" M expr ";"

    LEFT_PARENTHESIS  shift, and go to state 48


State 7

   73 funcprefix: FUNCTION . funcname

    ID  shift, and go to state 49

    $default  reduce using rule 72 (funcname)

    funcname  go to state 50


State 8

  102 returnstmt: RETURN . ";"
  103           | RETURN . expr ";"

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    ";"               shift, and go to state 51
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 52
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 9

    9 stmt: BREAK . ";"

    ";"  shift, and go to state 53


State 10

   10 stmt: CONTINUE . ";"

    ";"  shift, and go to state 54


State 11

   44 lvalue: LOCAL . ID

    ID  shift, and go to state 55


State 12

   81 const: TRUE .

    $default  reduce using rule 81 (const)


State 13

   82 const: FALSE .

    $default  reduce using rule 82 (const)


State 14

   80 const: NIL .

    $default  reduce using rule 80 (const)


State 15

   78 const: NUMBER .

    $default  reduce using rule 78 (const)


State 16

   31 term: NOTOP . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 56
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 17

   30 term: SUB . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 57
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 18

   32 term: INC . lvalue

    LOCAL             shift, and go to state 11
    LEFT_PARENTHESIS  shift, and go to state 58
    "::"              shift, and go to state 24
    ID                shift, and go to state 26

    lvalue  go to state 59
    member  go to state 33
    call    go to state 60


State 19

   34 term: DEC . lvalue

    LOCAL             shift, and go to state 11
    LEFT_PARENTHESIS  shift, and go to state 58
    "::"              shift, and go to state 24
    ID                shift, and go to state 26

    lvalue  go to state 61
    member  go to state 33
    call    go to state 60


State 20

   70 block: "{" . $@1 statements "}"

    $default  reduce using rule 69 ($@1)

    $@1  go to state 62


State 21

   63 objectdef: "LEFT_BRACKET" . elist "RIGHT_BRACKET"
   64          | "LEFT_BRACKET" . indexed "RIGHT_BRACKET"

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "{"               shift, and go to state 63
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 62 (elist)

    expr         go to state 64
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    elist        go to state 65
    objectdef    go to state 35
    indexed      go to state 66
    indexedelem  go to state 67
    const        go to state 39


State 22

   29 term: LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS
   41 primary: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS
   53 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION          shift, and go to state 7
    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 68
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    funcprefix  go to state 37
    funcdef     go to state 69
    const       go to state 39


State 23

   13 stmt: ";" .

    $default  reduce using rule 13 (stmt)


State 24

   45 lvalue: "::" . ID

    ID  shift, and go to state 70


State 25

   79 const: "string" .

    $default  reduce using rule 79 (const)


State 26

   43 lvalue: ID .

    $default  reduce using rule 43 (lvalue)


State 27

    2 statements: statements stmt .

    $default  reduce using rule 2 (statements)


State 28

    4 stmt: expr . ";"
   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    AND     shift, and go to state 71
    OR      shift, and go to state 72
    ADD     shift, and go to state 73
    SUB     shift, and go to state 74
    MUL     shift, and go to state 75
    DIV     shift, and go to state 76
    MOD     shift, and go to state 77
    EQ      shift, and go to state 78
    DIF     shift, and go to state 79
    GR      shift, and go to state 80
    GREQ    shift, and go to state 81
    LESS    shift, and go to state 82
    LESSEQ  shift, and go to state 83
    ";"     shift, and go to state 84


State 29

   28 expr: term .

    $default  reduce using rule 28 (expr)


State 30

   14 expr: assignexpr .

    $default  reduce using rule 14 (expr)


State 31

   36 term: primary .

    $default  reduce using rule 36 (term)


State 32

   33 term: lvalue . INC
   35     | lvalue . DEC
   37 assignexpr: lvalue . ASSIGNMENT expr
   38 primary: lvalue .
   47 member: lvalue . "." ID
   48       | lvalue . "LEFT_BRACKET" expr "RIGHT_BRACKET"
   52 call: lvalue . callsuffix

    ASSIGNMENT        shift, and go to state 85
    INC               shift, and go to state 86
    DEC               shift, and go to state 87
    "LEFT_BRACKET"    shift, and go to state 88
    LEFT_PARENTHESIS  shift, and go to state 89
    "."               shift, and go to state 90
    ".."              shift, and go to state 91

    $default  reduce using rule 38 (primary)

    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 33

   46 lvalue: member .

    $default  reduce using rule 46 (lvalue)


State 34

   39 primary: call .
   49 member: call . "." ID2
   50       | call . "LEFT_BRACKET" expr "RIGHT_BRACKET"
   51 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    "LEFT_BRACKET"    shift, and go to state 95
    LEFT_PARENTHESIS  shift, and go to state 96
    "."               shift, and go to state 97

    $default  reduce using rule 39 (primary)


State 35

   40 primary: objectdef .

    $default  reduce using rule 40 (primary)


State 36

   11 stmt: block .

    $default  reduce using rule 11 (stmt)


State 37

   77 funcdef: funcprefix . funcargs funcbody

    LEFT_PARENTHESIS  shift, and go to state 98

    funcargs  go to state 99


State 38

   12 stmt: funcdef .

    $default  reduce using rule 12 (stmt)


State 39

   42 primary: const .

    $default  reduce using rule 42 (primary)


State 40

   89 if: ifprefix . stmt
   91   | ifprefix . stmt elseprefix stmt

    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "{"               shift, and go to state 20
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    ";"               shift, and go to state 23
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    stmt        go to state 100
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    if          go to state 41
    whilestart  go to state 42
    while       go to state 43
    forprefix   go to state 44
    for         go to state 45
    returnstmt  go to state 46


State 41

    5 stmt: if .

    $default  reduce using rule 5 (stmt)


State 42

   97 while: whilestart . whilecond loopstmt

    LEFT_PARENTHESIS  shift, and go to state 101

    whilecond  go to state 102


State 43

    6 stmt: while .

    $default  reduce using rule 6 (stmt)


State 44

  101 for: forprefix . N elist RIGHT_PARENTHESIS N loopstmt N

    $default  reduce using rule 98 (N)

    N  go to state 103


State 45

    7 stmt: for .

    $default  reduce using rule 7 (stmt)


State 46

    8 stmt: returnstmt .

    $default  reduce using rule 8 (stmt)


State 47

   88 ifprefix: IF LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 104
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 48

  100 forprefix: FOR LEFT_PARENTHESIS . elist ";" M expr ";"

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 62 (elist)

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 105
    objectdef   go to state 35
    const       go to state 39


State 49

   71 funcname: ID .

    $default  reduce using rule 71 (funcname)


State 50

   73 funcprefix: FUNCTION funcname .

    $default  reduce using rule 73 (funcprefix)


State 51

  102 returnstmt: RETURN ";" .

    $default  reduce using rule 102 (returnstmt)


State 52

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
  103 returnstmt: RETURN expr . ";"

    AND     shift, and go to state 71
    OR      shift, and go to state 72
    ADD     shift, and go to state 73
    SUB     shift, and go to state 74
    MUL     shift, and go to state 75
    DIV     shift, and go to state 76
    MOD     shift, and go to state 77
    EQ      shift, and go to state 78
    DIF     shift, and go to state 79
    GR      shift, and go to state 80
    GREQ    shift, and go to state 81
    LESS    shift, and go to state 82
    LESSEQ  shift, and go to state 83
    ";"     shift, and go to state 106


State 53

    9 stmt: BREAK ";" .

    $default  reduce using rule 9 (stmt)


State 54

   10 stmt: CONTINUE ";" .

    $default  reduce using rule 10 (stmt)


State 55

   44 lvalue: LOCAL ID .

    $default  reduce using rule 44 (lvalue)


State 56

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   31 term: NOTOP expr .

    $default  reduce using rule 31 (term)


State 57

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   30 term: SUB expr .

    $default  reduce using rule 30 (term)


State 58

   53 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION  shift, and go to state 7

    funcprefix  go to state 37
    funcdef     go to state 107


State 59

   32 term: INC lvalue .
   47 member: lvalue . "." ID
   48       | lvalue . "LEFT_BRACKET" expr "RIGHT_BRACKET"
   52 call: lvalue . callsuffix

    "LEFT_BRACKET"    shift, and go to state 88
    LEFT_PARENTHESIS  shift, and go to state 89
    "."               shift, and go to state 90
    ".."              shift, and go to state 91

    $default  reduce using rule 32 (term)

    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 60

   49 member: call . "." ID2
   50       | call . "LEFT_BRACKET" expr "RIGHT_BRACKET"
   51 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    "LEFT_BRACKET"    shift, and go to state 95
    LEFT_PARENTHESIS  shift, and go to state 96
    "."               shift, and go to state 97


State 61

   34 term: DEC lvalue .
   47 member: lvalue . "." ID
   48       | lvalue . "LEFT_BRACKET" expr "RIGHT_BRACKET"
   52 call: lvalue . callsuffix

    "LEFT_BRACKET"    shift, and go to state 88
    LEFT_PARENTHESIS  shift, and go to state 89
    "."               shift, and go to state 90
    ".."              shift, and go to state 91

    $default  reduce using rule 34 (term)

    callsuffix  go to state 92
    normcall    go to state 93
    methodcall  go to state 94


State 62

   70 block: "{" $@1 . statements "}"

    $default  reduce using rule 3 (statements)

    statements  go to state 108


State 63

   68 indexedelem: "{" . expr ":" expr "}"

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 109
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 64

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   61 elist: expr . elists

    AND     shift, and go to state 71
    OR      shift, and go to state 72
    ADD     shift, and go to state 73
    SUB     shift, and go to state 74
    MUL     shift, and go to state 75
    DIV     shift, and go to state 76
    MOD     shift, and go to state 77
    EQ      shift, and go to state 78
    DIF     shift, and go to state 79
    GR      shift, and go to state 80
    GREQ    shift, and go to state 81
    LESS    shift, and go to state 82
    LESSEQ  shift, and go to state 83
    ","     shift, and go to state 110

    $default  reduce using rule 60 (elists)

    elists  go to state 111


State 65

   63 objectdef: "LEFT_BRACKET" elist . "RIGHT_BRACKET"

    "RIGHT_BRACKET"  shift, and go to state 112


State 66

   64 objectdef: "LEFT_BRACKET" indexed . "RIGHT_BRACKET"

    "RIGHT_BRACKET"  shift, and go to state 113


State 67

   67 indexed: indexedelem . indexeds

    $default  reduce using rule 66 (indexeds)

    indexeds  go to state 114


State 68

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   29 term: LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    AND                shift, and go to state 71
    OR                 shift, and go to state 72
    ADD                shift, and go to state 73
    SUB                shift, and go to state 74
    MUL                shift, and go to state 75
    DIV                shift, and go to state 76
    MOD                shift, and go to state 77
    EQ                 shift, and go to state 78
    DIF                shift, and go to state 79
    GR                 shift, and go to state 80
    GREQ               shift, and go to state 81
    LESS               shift, and go to state 82
    LESSEQ             shift, and go to state 83
    RIGHT_PARENTHESIS  shift, and go to state 115


State 69

   41 primary: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS
   53 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 116


State 70

   45 lvalue: "::" ID .

    $default  reduce using rule 45 (lvalue)


State 71

   22 expr: expr AND . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 117
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 72

   23 expr: expr OR . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 118
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 73

   15 expr: expr ADD . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 119
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 74

   16 expr: expr SUB . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 120
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 75

   17 expr: expr MUL . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 121
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 76

   18 expr: expr DIV . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 122
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 77

   19 expr: expr MOD . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 123
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 78

   20 expr: expr EQ . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 124
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 79

   21 expr: expr DIF . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 125
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 80

   27 expr: expr GR . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 126
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 81

   24 expr: expr GREQ . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 127
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 82

   25 expr: expr LESS . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 128
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 83

   26 expr: expr LESSEQ . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 129
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 84

    4 stmt: expr ";" .

    $default  reduce using rule 4 (stmt)


State 85

   37 assignexpr: lvalue ASSIGNMENT . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 130
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 86

   33 term: lvalue INC .

    $default  reduce using rule 33 (term)


State 87

   35 term: lvalue DEC .

    $default  reduce using rule 35 (term)


State 88

   48 member: lvalue "LEFT_BRACKET" . expr "RIGHT_BRACKET"

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 131
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 89

   56 normcall: LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 62 (elist)

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 132
    objectdef   go to state 35
    const       go to state 39


State 90

   47 member: lvalue "." . ID

    ID  shift, and go to state 133


State 91

   58 methodcall: ".." . ID2 LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    ID  shift, and go to state 134

    ID2  go to state 135


State 92

   52 call: lvalue callsuffix .

    $default  reduce using rule 52 (call)


State 93

   54 callsuffix: normcall .

    $default  reduce using rule 54 (callsuffix)


State 94

   55 callsuffix: methodcall .

    $default  reduce using rule 55 (callsuffix)


State 95

   50 member: call "LEFT_BRACKET" . expr "RIGHT_BRACKET"

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 136
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 96

   51 call: call LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 62 (elist)

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 137
    objectdef   go to state 35
    const       go to state 39


State 97

   49 member: call "." . ID2

    ID  shift, and go to state 134

    ID2  go to state 138


State 98

   75 funcargs: LEFT_PARENTHESIS . $@2 idlist RIGHT_PARENTHESIS

    $default  reduce using rule 74 ($@2)

    $@2  go to state 139


State 99

   77 funcdef: funcprefix funcargs . funcbody

    "{"  shift, and go to state 20

    block     go to state 140
    funcbody  go to state 141


State 100

   89 if: ifprefix stmt .
   91   | ifprefix stmt . elseprefix stmt

    ELSE  shift, and go to state 142

    ELSE      [reduce using rule 89 (if)]
    $default  reduce using rule 89 (if)

    elseprefix  go to state 143


State 101

   96 whilecond: LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 144
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 102

   97 while: whilestart whilecond . loopstmt

    $default  reduce using rule 92 (loopstart)

    loopstart  go to state 145
    loopstmt   go to state 146


State 103

  101 for: forprefix N . elist RIGHT_PARENTHESIS N loopstmt N

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 62 (elist)

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 147
    objectdef   go to state 35
    const       go to state 39


State 104

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   88 ifprefix: IF LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    AND                shift, and go to state 71
    OR                 shift, and go to state 72
    ADD                shift, and go to state 73
    SUB                shift, and go to state 74
    MUL                shift, and go to state 75
    DIV                shift, and go to state 76
    MOD                shift, and go to state 77
    EQ                 shift, and go to state 78
    DIF                shift, and go to state 79
    GR                 shift, and go to state 80
    GREQ               shift, and go to state 81
    LESS               shift, and go to state 82
    LESSEQ             shift, and go to state 83
    RIGHT_PARENTHESIS  shift, and go to state 148


State 105

  100 forprefix: FOR LEFT_PARENTHESIS elist . ";" M expr ";"

    ";"  shift, and go to state 149


State 106

  103 returnstmt: RETURN expr ";" .

    $default  reduce using rule 103 (returnstmt)


State 107

   53 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 150


State 108

    2 statements: statements . stmt
   70 block: "{" $@1 statements . "}"

    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "{"               shift, and go to state 20
    "}"               shift, and go to state 151
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    ";"               shift, and go to state 23
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    if          go to state 41
    whilestart  go to state 42
    while       go to state 43
    forprefix   go to state 44
    for         go to state 45
    returnstmt  go to state 46


State 109

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   68 indexedelem: "{" expr . ":" expr "}"

    AND     shift, and go to state 71
    OR      shift, and go to state 72
    ADD     shift, and go to state 73
    SUB     shift, and go to state 74
    MUL     shift, and go to state 75
    DIV     shift, and go to state 76
    MOD     shift, and go to state 77
    EQ      shift, and go to state 78
    DIF     shift, and go to state 79
    GR      shift, and go to state 80
    GREQ    shift, and go to state 81
    LESS    shift, and go to state 82
    LESSEQ  shift, and go to state 83
    ":"     shift, and go to state 152


State 110

   59 elists: "," . expr elists

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 153
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 111

   61 elist: expr elists .

    $default  reduce using rule 61 (elist)


State 112

   63 objectdef: "LEFT_BRACKET" elist "RIGHT_BRACKET" .

    $default  reduce using rule 63 (objectdef)


State 113

   64 objectdef: "LEFT_BRACKET" indexed "RIGHT_BRACKET" .

    $default  reduce using rule 64 (objectdef)


State 114

   65 indexeds: indexeds . "," indexedelem
   67 indexed: indexedelem indexeds .

    ","  shift, and go to state 154

    $default  reduce using rule 67 (indexed)


State 115

   29 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 29 (term)


State 116

   41 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS .
   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 155

    $default  reduce using rule 41 (primary)


State 117

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   22     | expr AND expr .
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    ADD     shift, and go to state 73
    SUB     shift, and go to state 74
    MUL     shift, and go to state 75
    DIV     shift, and go to state 76
    MOD     shift, and go to state 77
    EQ      shift, and go to state 78
    DIF     shift, and go to state 79
    GR      shift, and go to state 80
    GREQ    shift, and go to state 81
    LESS    shift, and go to state 82
    LESSEQ  shift, and go to state 83

    $default  reduce using rule 22 (expr)


State 118

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   23     | expr OR expr .
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    AND     shift, and go to state 71
    ADD     shift, and go to state 73
    SUB     shift, and go to state 74
    MUL     shift, and go to state 75
    DIV     shift, and go to state 76
    MOD     shift, and go to state 77
    EQ      shift, and go to state 78
    DIF     shift, and go to state 79
    GR      shift, and go to state 80
    GREQ    shift, and go to state 81
    LESS    shift, and go to state 82
    LESSEQ  shift, and go to state 83

    $default  reduce using rule 23 (expr)


State 119

   15 expr: expr . ADD expr
   15     | expr ADD expr .
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    MUL  shift, and go to state 75
    DIV  shift, and go to state 76
    MOD  shift, and go to state 77

    $default  reduce using rule 15 (expr)


State 120

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   16     | expr SUB expr .
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    MUL  shift, and go to state 75
    DIV  shift, and go to state 76
    MOD  shift, and go to state 77

    $default  reduce using rule 16 (expr)


State 121

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   17     | expr MUL expr .
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    $default  reduce using rule 17 (expr)


State 122

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   18     | expr DIV expr .
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    $default  reduce using rule 18 (expr)


State 123

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   19     | expr MOD expr .
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    $default  reduce using rule 19 (expr)


State 124

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   20     | expr EQ expr .
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    ADD     shift, and go to state 73
    SUB     shift, and go to state 74
    MUL     shift, and go to state 75
    DIV     shift, and go to state 76
    MOD     shift, and go to state 77
    GR      shift, and go to state 80
    GREQ    shift, and go to state 81
    LESS    shift, and go to state 82
    LESSEQ  shift, and go to state 83

    EQ   error (nonassociative)
    DIF  error (nonassociative)

    $default  reduce using rule 20 (expr)


State 125

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   21     | expr DIF expr .
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    ADD     shift, and go to state 73
    SUB     shift, and go to state 74
    MUL     shift, and go to state 75
    DIV     shift, and go to state 76
    MOD     shift, and go to state 77
    GR      shift, and go to state 80
    GREQ    shift, and go to state 81
    LESS    shift, and go to state 82
    LESSEQ  shift, and go to state 83

    EQ   error (nonassociative)
    DIF  error (nonassociative)

    $default  reduce using rule 21 (expr)


State 126

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   27     | expr GR expr .

    ADD  shift, and go to state 73
    SUB  shift, and go to state 74
    MUL  shift, and go to state 75
    DIV  shift, and go to state 76
    MOD  shift, and go to state 77

    GR      error (nonassociative)
    GREQ    error (nonassociative)
    LESS    error (nonassociative)
    LESSEQ  error (nonassociative)

    $default  reduce using rule 27 (expr)


State 127

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   24     | expr GREQ expr .
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    ADD  shift, and go to state 73
    SUB  shift, and go to state 74
    MUL  shift, and go to state 75
    DIV  shift, and go to state 76
    MOD  shift, and go to state 77

    GR      error (nonassociative)
    GREQ    error (nonassociative)
    LESS    error (nonassociative)
    LESSEQ  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 128

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   25     | expr LESS expr .
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    ADD  shift, and go to state 73
    SUB  shift, and go to state 74
    MUL  shift, and go to state 75
    DIV  shift, and go to state 76
    MOD  shift, and go to state 77

    GR      error (nonassociative)
    GREQ    error (nonassociative)
    LESS    error (nonassociative)
    LESSEQ  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 129

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   26     | expr LESSEQ expr .
   27     | expr . GR expr

    ADD  shift, and go to state 73
    SUB  shift, and go to state 74
    MUL  shift, and go to state 75
    DIV  shift, and go to state 76
    MOD  shift, and go to state 77

    GR      error (nonassociative)
    GREQ    error (nonassociative)
    LESS    error (nonassociative)
    LESSEQ  error (nonassociative)

    $default  reduce using rule 26 (expr)


State 130

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   37 assignexpr: lvalue ASSIGNMENT expr .

    AND     shift, and go to state 71
    OR      shift, and go to state 72
    ADD     shift, and go to state 73
    SUB     shift, and go to state 74
    MUL     shift, and go to state 75
    DIV     shift, and go to state 76
    MOD     shift, and go to state 77
    EQ      shift, and go to state 78
    DIF     shift, and go to state 79
    GR      shift, and go to state 80
    GREQ    shift, and go to state 81
    LESS    shift, and go to state 82
    LESSEQ  shift, and go to state 83

    $default  reduce using rule 37 (assignexpr)


State 131

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   48 member: lvalue "LEFT_BRACKET" expr . "RIGHT_BRACKET"

    AND              shift, and go to state 71
    OR               shift, and go to state 72
    ADD              shift, and go to state 73
    SUB              shift, and go to state 74
    MUL              shift, and go to state 75
    DIV              shift, and go to state 76
    MOD              shift, and go to state 77
    EQ               shift, and go to state 78
    DIF              shift, and go to state 79
    GR               shift, and go to state 80
    GREQ             shift, and go to state 81
    LESS             shift, and go to state 82
    LESSEQ           shift, and go to state 83
    "RIGHT_BRACKET"  shift, and go to state 156


State 132

   56 normcall: LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 157


State 133

   47 member: lvalue "." ID .

    $default  reduce using rule 47 (member)


State 134

   57 ID2: ID .

    $default  reduce using rule 57 (ID2)


State 135

   58 methodcall: ".." ID2 . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 158


State 136

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   50 member: call "LEFT_BRACKET" expr . "RIGHT_BRACKET"

    AND              shift, and go to state 71
    OR               shift, and go to state 72
    ADD              shift, and go to state 73
    SUB              shift, and go to state 74
    MUL              shift, and go to state 75
    DIV              shift, and go to state 76
    MOD              shift, and go to state 77
    EQ               shift, and go to state 78
    DIF              shift, and go to state 79
    GR               shift, and go to state 80
    GREQ             shift, and go to state 81
    LESS             shift, and go to state 82
    LESSEQ           shift, and go to state 83
    "RIGHT_BRACKET"  shift, and go to state 159


State 137

   51 call: call LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 160


State 138

   49 member: call "." ID2 .

    $default  reduce using rule 49 (member)


State 139

   75 funcargs: LEFT_PARENTHESIS $@2 . idlist RIGHT_PARENTHESIS

    ID  shift, and go to state 161

    $default  reduce using rule 87 (idlist)

    idlist  go to state 162


State 140

   76 funcbody: block .

    $default  reduce using rule 76 (funcbody)


State 141

   77 funcdef: funcprefix funcargs funcbody .

    $default  reduce using rule 77 (funcdef)


State 142

   90 elseprefix: ELSE .

    $default  reduce using rule 90 (elseprefix)


State 143

   91 if: ifprefix stmt elseprefix . stmt

    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "{"               shift, and go to state 20
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    ";"               shift, and go to state 23
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    stmt        go to state 163
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    if          go to state 41
    whilestart  go to state 42
    while       go to state 43
    forprefix   go to state 44
    for         go to state 45
    returnstmt  go to state 46


State 144

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   96 whilecond: LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    AND                shift, and go to state 71
    OR                 shift, and go to state 72
    ADD                shift, and go to state 73
    SUB                shift, and go to state 74
    MUL                shift, and go to state 75
    DIV                shift, and go to state 76
    MOD                shift, and go to state 77
    EQ                 shift, and go to state 78
    DIF                shift, and go to state 79
    GR                 shift, and go to state 80
    GREQ               shift, and go to state 81
    LESS               shift, and go to state 82
    LESSEQ             shift, and go to state 83
    RIGHT_PARENTHESIS  shift, and go to state 164


State 145

   94 loopstmt: loopstart . stmt loopend

    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "{"               shift, and go to state 20
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    ";"               shift, and go to state 23
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    stmt        go to state 165
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcprefix  go to state 37
    funcdef     go to state 38
    const       go to state 39
    ifprefix    go to state 40
    if          go to state 41
    whilestart  go to state 42
    while       go to state 43
    forprefix   go to state 44
    for         go to state 45
    returnstmt  go to state 46


State 146

   97 while: whilestart whilecond loopstmt .

    $default  reduce using rule 97 (while)


State 147

  101 for: forprefix N elist . RIGHT_PARENTHESIS N loopstmt N

    RIGHT_PARENTHESIS  shift, and go to state 166


State 148

   88 ifprefix: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 88 (ifprefix)


State 149

  100 forprefix: FOR LEFT_PARENTHESIS elist ";" . M expr ";"

    $default  reduce using rule 99 (M)

    M  go to state 167


State 150

   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 155


State 151

   70 block: "{" $@1 statements "}" .

    $default  reduce using rule 70 (block)


State 152

   68 indexedelem: "{" expr ":" . expr "}"

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 168
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 153

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   59 elists: "," expr . elists

    AND     shift, and go to state 71
    OR      shift, and go to state 72
    ADD     shift, and go to state 73
    SUB     shift, and go to state 74
    MUL     shift, and go to state 75
    DIV     shift, and go to state 76
    MOD     shift, and go to state 77
    EQ      shift, and go to state 78
    DIF     shift, and go to state 79
    GR      shift, and go to state 80
    GREQ    shift, and go to state 81
    LESS    shift, and go to state 82
    LESSEQ  shift, and go to state 83
    ","     shift, and go to state 110

    $default  reduce using rule 60 (elists)

    elists  go to state 169


State 154

   65 indexeds: indexeds "," . indexedelem

    "{"  shift, and go to state 63

    indexedelem  go to state 170


State 155

   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 62 (elist)

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 171
    objectdef   go to state 35
    const       go to state 39


State 156

   48 member: lvalue "LEFT_BRACKET" expr "RIGHT_BRACKET" .

    $default  reduce using rule 48 (member)


State 157

   56 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 56 (normcall)


State 158

   58 methodcall: ".." ID2 LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 62 (elist)

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 172
    objectdef   go to state 35
    const       go to state 39


State 159

   50 member: call "LEFT_BRACKET" expr "RIGHT_BRACKET" .

    $default  reduce using rule 50 (member)


State 160

   51 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 51 (call)


State 161

   86 idlist: ID . $@3 idlists

    $default  reduce using rule 85 ($@3)

    $@3  go to state 173


State 162

   75 funcargs: LEFT_PARENTHESIS $@2 idlist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 174


State 163

   91 if: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 91 (if)


State 164

   96 whilecond: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 96 (whilecond)


State 165

   94 loopstmt: loopstart stmt . loopend

    $default  reduce using rule 93 (loopend)

    loopend  go to state 175


State 166

  101 for: forprefix N elist RIGHT_PARENTHESIS . N loopstmt N

    $default  reduce using rule 98 (N)

    N  go to state 176


State 167

  100 forprefix: FOR LEFT_PARENTHESIS elist ";" M . expr ";"

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 177
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 39


State 168

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   68 indexedelem: "{" expr ":" expr . "}"

    AND     shift, and go to state 71
    OR      shift, and go to state 72
    ADD     shift, and go to state 73
    SUB     shift, and go to state 74
    MUL     shift, and go to state 75
    DIV     shift, and go to state 76
    MOD     shift, and go to state 77
    EQ      shift, and go to state 78
    DIF     shift, and go to state 79
    GR      shift, and go to state 80
    GREQ    shift, and go to state 81
    LESS    shift, and go to state 82
    LESSEQ  shift, and go to state 83
    "}"     shift, and go to state 178


State 169

   59 elists: "," expr elists .

    $default  reduce using rule 59 (elists)


State 170

   65 indexeds: indexeds "," indexedelem .

    $default  reduce using rule 65 (indexeds)


State 171

   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 179


State 172

   58 methodcall: ".." ID2 LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 180


State 173

   86 idlist: ID $@3 . idlists

    $default  reduce using rule 84 (idlists)

    idlists  go to state 181


State 174

   75 funcargs: LEFT_PARENTHESIS $@2 idlist RIGHT_PARENTHESIS .

    $default  reduce using rule 75 (funcargs)


State 175

   94 loopstmt: loopstart stmt loopend .

    $default  reduce using rule 94 (loopstmt)


State 176

  101 for: forprefix N elist RIGHT_PARENTHESIS N . loopstmt N

    $default  reduce using rule 92 (loopstart)

    loopstart  go to state 145
    loopstmt   go to state 182


State 177

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
  100 forprefix: FOR LEFT_PARENTHESIS elist ";" M expr . ";"

    AND     shift, and go to state 71
    OR      shift, and go to state 72
    ADD     shift, and go to state 73
    SUB     shift, and go to state 74
    MUL     shift, and go to state 75
    DIV     shift, and go to state 76
    MOD     shift, and go to state 77
    EQ      shift, and go to state 78
    DIF     shift, and go to state 79
    GR      shift, and go to state 80
    GREQ    shift, and go to state 81
    LESS    shift, and go to state 82
    LESSEQ  shift, and go to state 83
    ";"     shift, and go to state 183


State 178

   68 indexedelem: "{" expr ":" expr "}" .

    $default  reduce using rule 68 (indexedelem)


State 179

   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 53 (call)


State 180

   58 methodcall: ".." ID2 LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 58 (methodcall)


State 181

   83 idlists: idlists . "," ID
   86 idlist: ID $@3 idlists .

    ","  shift, and go to state 184

    $default  reduce using rule 86 (idlist)


State 182

  101 for: forprefix N elist RIGHT_PARENTHESIS N loopstmt . N

    $default  reduce using rule 98 (N)

    N  go to state 185


State 183

  100 forprefix: FOR LEFT_PARENTHESIS elist ";" M expr ";" .

    $default  reduce using rule 100 (forprefix)


State 184

   83 idlists: idlists "," . ID

    ID  shift, and go to state 186


State 185

  101 for: forprefix N elist RIGHT_PARENTHESIS N loopstmt N .

    $default  reduce using rule 101 (for)


State 186

   83 idlists: idlists "," ID .

    $default  reduce using rule 83 (idlists)
