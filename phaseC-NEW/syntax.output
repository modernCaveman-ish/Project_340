Terminals unused in grammar

    "_"
    "comment"
    "multiple comment"
    "nested comment"


State 94 conflicts: 1 shift/reduce


Grammar

    0 $accept: program "end of file"

    1 program: statements

    2 statements: statements stmt
    3           | %empty

    4 stmt: expr ";"
    5     | if
    6     | while
    7     | FOR
    8     | returnstmt
    9     | BREAK ";"
   10     | CONTINUE ";"
   11     | block
   12     | funcdef
   13     | ";"

   14 expr: assignexpr
   15     | expr ADD expr
   16     | expr SUB expr
   17     | expr MUL expr
   18     | expr DIV expr
   19     | expr MOD expr
   20     | expr EQ expr
   21     | expr DIF expr
   22     | expr AND expr
   23     | expr OR expr
   24     | expr GREQ expr
   25     | expr LESS expr
   26     | expr LESSEQ expr
   27     | expr GR expr
   28     | term

   29 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS
   30     | SUB expr
   31     | NOTOP expr
   32     | INC lvalue
   33     | lvalue INC
   34     | DEC lvalue
   35     | lvalue DEC
   36     | primary

   37 assignexpr: lvalue ASSIGNMENT expr

   38 primary: lvalue
   39        | call
   40        | objectdef
   41        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   42        | const

   43 lvalue: ID
   44       | LOCAL ID
   45       | "::" ID
   46       | member

   47 member: lvalue "." ID
   48       | lvalue "LEFT_BRACKET" expr "RIGHT_BRACKET"
   49       | call "." ID
   50       | call "LEFT_BRACKET" expr "RIGHT_BRACKET"

   51 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   52     | lvalue callsuffix
   53     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   54 callsuffix: normcall
   55           | methodcall

   56 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   57 methodcall: ".." ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   58 elists: "," expr elists
   59       | %empty

   60 elist: expr elists
   61      | %empty

   62 objectdef: "LEFT_BRACKET" elist "RIGHT_BRACKET"
   63          | "LEFT_BRACKET" indexed "RIGHT_BRACKET"

   64 indexeds: indexeds "," indexedelem
   65         | %empty

   66 indexed: indexedelem indexeds

   67 indexedelem: "{" expr ":" expr "}"

   68 $@1: %empty

   69 block: "{" $@1 statements "}"

   70 $@2: %empty

   71 $@3: %empty

   72 $@4: %empty

   73 funcdef: FUNCTION ID $@2 LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 block

   74 $@5: %empty

   75 $@6: %empty

   76 $@7: %empty

   77 funcdef: FUNCTION $@5 LEFT_PARENTHESIS $@6 idlist RIGHT_PARENTHESIS $@7 block

   78 const: NUMBER
   79      | "string"
   80      | NIL
   81      | TRUE
   82      | FALSE

   83 idlists: idlists "," ID
   84        | %empty

   85 $@8: %empty

   86 idlist: ID $@8 idlists
   87       | %empty

   88 ifprefix: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

   89 if: ifprefix stmt

   90 elseprefix: ELSE

   91 if: ifprefix stmt elseprefix stmt

   92 loopstart: %empty

   93 loopend: %empty

   94 loopstmt: loopstart stmt loopend

   95 whilestart: WHILE

   96 whilecond: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

   97 while: whilestart whilecond loopstmt stmt

   98 returnstmt: RETURN ";"
   99           | RETURN expr ";"


Terminals, with rules where they appear

    "end of file" <strval> (0) 0
    error (256)
    IF <strval> (258) 88
    ELSE (259) 90
    WHILE (260) 95
    FOR (261) 7
    FUNCTION (262) 73 77
    RETURN (263) 98 99
    BREAK (264) 9
    CONTINUE (265) 10
    LOCAL (266) 44
    TRUE (267) 81
    FALSE (268) 82
    NIL (269) 80
    NUMBER <realValue> (270) 78
    ASSIGNMENT (271) 37
    OR (272) 23
    AND (273) 22
    NOTOP (274) 31
    ADD (275) 15
    UMINUS (276)
    SUB (277) 16 30
    MUL (278) 17
    DIV (279) 18
    MOD (280) 19
    EQ (281) 20
    DIF (282) 21
    INC (283) 32 33
    DEC (284) 34 35
    GR (285) 27
    GREQ (286) 24
    LESS (287) 25
    LESSEQ (288) 26
    "{" (289) 67 69
    "}" (290) 67 69
    "LEFT_BRACKET" (291) 48 50 62 63
    "RIGHT_BRACKET" (292) 48 50 62 63
    RIGHT_PARENTHESIS (293) 29 41 51 53 56 57 73 77 88 96
    LEFT_PARENTHESIS (294) 29 41 51 53 56 57 73 77 88 96
    ";" (295) 4 9 10 13 98 99
    "," (296) 58 64 83
    ":" (297) 67
    "::" (298) 45
    "." (299) 47 49
    ".." (300) 57
    "_" (301)
    "string" <strval> (302) 79
    "comment" <strval> (303)
    ID <strval> (304) 43 44 45 47 49 57 73 83 86
    "multiple comment" <strval> (305)
    "nested comment" <strval> (306)


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    program (53)
        on left: 1
        on right: 0
    statements (54)
        on left: 2 3
        on right: 1 2 69
    stmt <stmt_t> (55)
        on left: 4 5 6 7 8 9 10 11 12 13
        on right: 2 89 91 94 96 97
    expr <exprvalue> (56)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
        on right: 4 15 16 17 18 19 20 21 22 23 24 25 26 27 29 30 31 37 48 50 58 60 67 88 96 99
    term <exprvalue> (57)
        on left: 29 30 31 32 33 34 35 36
        on right: 28
    assignexpr <exprvalue> (58)
        on left: 37
        on right: 14
    primary <exprvalue> (59)
        on left: 38 39 40 41 42
        on right: 36
    lvalue <exprvalue> (60)
        on left: 43 44 45 46
        on right: 32 33 34 35 37 38 47 48 52
    member <exprvalue> (61)
        on left: 47 48 49 50
        on right: 46
    call <exprvalue> (62)
        on left: 51 52 53
        on right: 39 49 50 51
    callsuffix <callvalue> (63)
        on left: 54 55
        on right: 52
    normcall <callvalue> (64)
        on left: 56
        on right: 54
    methodcall <callvalue> (65)
        on left: 57
        on right: 55
    elists (66)
        on left: 58 59
        on right: 58 60
    elist <exprvalue> (67)
        on left: 60 61
        on right: 51 53 56 57 62
    objectdef <exprvalue> (68)
        on left: 62 63
        on right: 40
    indexeds (69)
        on left: 64 65
        on right: 64 66
    indexed <exprvalue> (70)
        on left: 66
        on right: 63
    indexedelem <exprvalue> (71)
        on left: 67
        on right: 64 66
    block (72)
        on left: 69
        on right: 11 73 77
    $@1 (73)
        on left: 68
        on right: 69
    funcdef (74)
        on left: 73 77
        on right: 12 41 53
    $@2 (75)
        on left: 70
        on right: 73
    $@3 (76)
        on left: 71
        on right: 73
    $@4 (77)
        on left: 72
        on right: 73
    $@5 (78)
        on left: 74
        on right: 77
    $@6 (79)
        on left: 75
        on right: 77
    $@7 (80)
        on left: 76
        on right: 77
    const <exprvalue> (81)
        on left: 78 79 80 81 82
        on right: 42
    idlists (82)
        on left: 83 84
        on right: 83 86
    idlist (83)
        on left: 86 87
        on right: 73 77
    $@8 (84)
        on left: 85
        on right: 86
    ifprefix <intValue> (85)
        on left: 88
        on right: 89 91
    if (86)
        on left: 89 91
        on right: 5
    elseprefix <intValue> (87)
        on left: 90
        on right: 91
    loopstart (88)
        on left: 92
        on right: 94
    loopend (89)
        on left: 93
        on right: 94
    loopstmt <intValue> (90)
        on left: 94
        on right: 97
    whilestart <intValue> (91)
        on left: 95
        on right: 97
    whilecond <intValue> (92)
        on left: 96
        on right: 97
    while (93)
        on left: 97
        on right: 6
    returnstmt (94)
        on left: 98 99
        on right: 8


State 0

    0 $accept: . program "end of file"

    $default  reduce using rule 3 (statements)

    program     go to state 1
    statements  go to state 2


State 1

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 3


State 2

    1 program: statements .
    2 statements: statements . stmt

    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "{"               shift, and go to state 20
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    ";"               shift, and go to state 23
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 1 (program)

    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    if          go to state 40
    whilestart  go to state 41
    while       go to state 42
    returnstmt  go to state 43


State 3

    0 $accept: program "end of file" .

    $default  accept


State 4

   88 ifprefix: IF . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 44


State 5

   95 whilestart: WHILE .

    $default  reduce using rule 95 (whilestart)


State 6

    7 stmt: FOR .

    $default  reduce using rule 7 (stmt)


State 7

   73 funcdef: FUNCTION . ID $@2 LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 block
   77        | FUNCTION . $@5 LEFT_PARENTHESIS $@6 idlist RIGHT_PARENTHESIS $@7 block

    ID  shift, and go to state 45

    $default  reduce using rule 74 ($@5)

    $@5  go to state 46


State 8

   98 returnstmt: RETURN . ";"
   99           | RETURN . expr ";"

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    ";"               shift, and go to state 47
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 48
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 9

    9 stmt: BREAK . ";"

    ";"  shift, and go to state 49


State 10

   10 stmt: CONTINUE . ";"

    ";"  shift, and go to state 50


State 11

   44 lvalue: LOCAL . ID

    ID  shift, and go to state 51


State 12

   81 const: TRUE .

    $default  reduce using rule 81 (const)


State 13

   82 const: FALSE .

    $default  reduce using rule 82 (const)


State 14

   80 const: NIL .

    $default  reduce using rule 80 (const)


State 15

   78 const: NUMBER .

    $default  reduce using rule 78 (const)


State 16

   31 term: NOTOP . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 52
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 17

   30 term: SUB . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 53
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 18

   32 term: INC . lvalue

    LOCAL             shift, and go to state 11
    LEFT_PARENTHESIS  shift, and go to state 54
    "::"              shift, and go to state 24
    ID                shift, and go to state 26

    lvalue  go to state 55
    member  go to state 33
    call    go to state 56


State 19

   34 term: DEC . lvalue

    LOCAL             shift, and go to state 11
    LEFT_PARENTHESIS  shift, and go to state 54
    "::"              shift, and go to state 24
    ID                shift, and go to state 26

    lvalue  go to state 57
    member  go to state 33
    call    go to state 56


State 20

   69 block: "{" . $@1 statements "}"

    $default  reduce using rule 68 ($@1)

    $@1  go to state 58


State 21

   62 objectdef: "LEFT_BRACKET" . elist "RIGHT_BRACKET"
   63          | "LEFT_BRACKET" . indexed "RIGHT_BRACKET"

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "{"               shift, and go to state 59
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 61 (elist)

    expr         go to state 60
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    elist        go to state 61
    objectdef    go to state 35
    indexed      go to state 62
    indexedelem  go to state 63
    const        go to state 38


State 22

   29 term: LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS
   41 primary: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS
   53 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION          shift, and go to state 7
    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    funcdef     go to state 65
    const       go to state 38


State 23

   13 stmt: ";" .

    $default  reduce using rule 13 (stmt)


State 24

   45 lvalue: "::" . ID

    ID  shift, and go to state 66


State 25

   79 const: "string" .

    $default  reduce using rule 79 (const)


State 26

   43 lvalue: ID .

    $default  reduce using rule 43 (lvalue)


State 27

    2 statements: statements stmt .

    $default  reduce using rule 2 (statements)


State 28

    4 stmt: expr . ";"
   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MOD     shift, and go to state 73
    EQ      shift, and go to state 74
    DIF     shift, and go to state 75
    GR      shift, and go to state 76
    GREQ    shift, and go to state 77
    LESS    shift, and go to state 78
    LESSEQ  shift, and go to state 79
    ";"     shift, and go to state 80


State 29

   28 expr: term .

    $default  reduce using rule 28 (expr)


State 30

   14 expr: assignexpr .

    $default  reduce using rule 14 (expr)


State 31

   36 term: primary .

    $default  reduce using rule 36 (term)


State 32

   33 term: lvalue . INC
   35     | lvalue . DEC
   37 assignexpr: lvalue . ASSIGNMENT expr
   38 primary: lvalue .
   47 member: lvalue . "." ID
   48       | lvalue . "LEFT_BRACKET" expr "RIGHT_BRACKET"
   52 call: lvalue . callsuffix

    ASSIGNMENT        shift, and go to state 81
    INC               shift, and go to state 82
    DEC               shift, and go to state 83
    "LEFT_BRACKET"    shift, and go to state 84
    LEFT_PARENTHESIS  shift, and go to state 85
    "."               shift, and go to state 86
    ".."              shift, and go to state 87

    $default  reduce using rule 38 (primary)

    callsuffix  go to state 88
    normcall    go to state 89
    methodcall  go to state 90


State 33

   46 lvalue: member .

    $default  reduce using rule 46 (lvalue)


State 34

   39 primary: call .
   49 member: call . "." ID
   50       | call . "LEFT_BRACKET" expr "RIGHT_BRACKET"
   51 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    "LEFT_BRACKET"    shift, and go to state 91
    LEFT_PARENTHESIS  shift, and go to state 92
    "."               shift, and go to state 93

    $default  reduce using rule 39 (primary)


State 35

   40 primary: objectdef .

    $default  reduce using rule 40 (primary)


State 36

   11 stmt: block .

    $default  reduce using rule 11 (stmt)


State 37

   12 stmt: funcdef .

    $default  reduce using rule 12 (stmt)


State 38

   42 primary: const .

    $default  reduce using rule 42 (primary)


State 39

   89 if: ifprefix . stmt
   91   | ifprefix . stmt elseprefix stmt

    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "{"               shift, and go to state 20
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    ";"               shift, and go to state 23
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    stmt        go to state 94
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    if          go to state 40
    whilestart  go to state 41
    while       go to state 42
    returnstmt  go to state 43


State 40

    5 stmt: if .

    $default  reduce using rule 5 (stmt)


State 41

   97 while: whilestart . whilecond loopstmt stmt

    LEFT_PARENTHESIS  shift, and go to state 95

    whilecond  go to state 96


State 42

    6 stmt: while .

    $default  reduce using rule 6 (stmt)


State 43

    8 stmt: returnstmt .

    $default  reduce using rule 8 (stmt)


State 44

   88 ifprefix: IF LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 97
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 45

   73 funcdef: FUNCTION ID . $@2 LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 block

    $default  reduce using rule 70 ($@2)

    $@2  go to state 98


State 46

   77 funcdef: FUNCTION $@5 . LEFT_PARENTHESIS $@6 idlist RIGHT_PARENTHESIS $@7 block

    LEFT_PARENTHESIS  shift, and go to state 99


State 47

   98 returnstmt: RETURN ";" .

    $default  reduce using rule 98 (returnstmt)


State 48

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   99 returnstmt: RETURN expr . ";"

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MOD     shift, and go to state 73
    EQ      shift, and go to state 74
    DIF     shift, and go to state 75
    GR      shift, and go to state 76
    GREQ    shift, and go to state 77
    LESS    shift, and go to state 78
    LESSEQ  shift, and go to state 79
    ";"     shift, and go to state 100


State 49

    9 stmt: BREAK ";" .

    $default  reduce using rule 9 (stmt)


State 50

   10 stmt: CONTINUE ";" .

    $default  reduce using rule 10 (stmt)


State 51

   44 lvalue: LOCAL ID .

    $default  reduce using rule 44 (lvalue)


State 52

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   31 term: NOTOP expr .

    $default  reduce using rule 31 (term)


State 53

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   30 term: SUB expr .

    $default  reduce using rule 30 (term)


State 54

   53 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNCTION  shift, and go to state 7

    funcdef  go to state 101


State 55

   32 term: INC lvalue .
   47 member: lvalue . "." ID
   48       | lvalue . "LEFT_BRACKET" expr "RIGHT_BRACKET"
   52 call: lvalue . callsuffix

    "LEFT_BRACKET"    shift, and go to state 84
    LEFT_PARENTHESIS  shift, and go to state 85
    "."               shift, and go to state 86
    ".."              shift, and go to state 87

    $default  reduce using rule 32 (term)

    callsuffix  go to state 88
    normcall    go to state 89
    methodcall  go to state 90


State 56

   49 member: call . "." ID
   50       | call . "LEFT_BRACKET" expr "RIGHT_BRACKET"
   51 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    "LEFT_BRACKET"    shift, and go to state 91
    LEFT_PARENTHESIS  shift, and go to state 92
    "."               shift, and go to state 93


State 57

   34 term: DEC lvalue .
   47 member: lvalue . "." ID
   48       | lvalue . "LEFT_BRACKET" expr "RIGHT_BRACKET"
   52 call: lvalue . callsuffix

    "LEFT_BRACKET"    shift, and go to state 84
    LEFT_PARENTHESIS  shift, and go to state 85
    "."               shift, and go to state 86
    ".."              shift, and go to state 87

    $default  reduce using rule 34 (term)

    callsuffix  go to state 88
    normcall    go to state 89
    methodcall  go to state 90


State 58

   69 block: "{" $@1 . statements "}"

    $default  reduce using rule 3 (statements)

    statements  go to state 102


State 59

   67 indexedelem: "{" . expr ":" expr "}"

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 103
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 60

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   60 elist: expr . elists

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MOD     shift, and go to state 73
    EQ      shift, and go to state 74
    DIF     shift, and go to state 75
    GR      shift, and go to state 76
    GREQ    shift, and go to state 77
    LESS    shift, and go to state 78
    LESSEQ  shift, and go to state 79
    ","     shift, and go to state 104

    $default  reduce using rule 59 (elists)

    elists  go to state 105


State 61

   62 objectdef: "LEFT_BRACKET" elist . "RIGHT_BRACKET"

    "RIGHT_BRACKET"  shift, and go to state 106


State 62

   63 objectdef: "LEFT_BRACKET" indexed . "RIGHT_BRACKET"

    "RIGHT_BRACKET"  shift, and go to state 107


State 63

   66 indexed: indexedelem . indexeds

    $default  reduce using rule 65 (indexeds)

    indexeds  go to state 108


State 64

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   29 term: LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    OR                 shift, and go to state 67
    AND                shift, and go to state 68
    ADD                shift, and go to state 69
    SUB                shift, and go to state 70
    MUL                shift, and go to state 71
    DIV                shift, and go to state 72
    MOD                shift, and go to state 73
    EQ                 shift, and go to state 74
    DIF                shift, and go to state 75
    GR                 shift, and go to state 76
    GREQ               shift, and go to state 77
    LESS               shift, and go to state 78
    LESSEQ             shift, and go to state 79
    RIGHT_PARENTHESIS  shift, and go to state 109


State 65

   41 primary: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS
   53 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 110


State 66

   45 lvalue: "::" ID .

    $default  reduce using rule 45 (lvalue)


State 67

   23 expr: expr OR . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 111
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 68

   22 expr: expr AND . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 112
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 69

   15 expr: expr ADD . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 113
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 70

   16 expr: expr SUB . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 114
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 71

   17 expr: expr MUL . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 115
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 72

   18 expr: expr DIV . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 116
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 73

   19 expr: expr MOD . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 117
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 74

   20 expr: expr EQ . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 118
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 75

   21 expr: expr DIF . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 119
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 76

   27 expr: expr GR . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 120
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 77

   24 expr: expr GREQ . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 121
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 78

   25 expr: expr LESS . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 122
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 79

   26 expr: expr LESSEQ . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 123
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 80

    4 stmt: expr ";" .

    $default  reduce using rule 4 (stmt)


State 81

   37 assignexpr: lvalue ASSIGNMENT . expr

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 124
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 82

   33 term: lvalue INC .

    $default  reduce using rule 33 (term)


State 83

   35 term: lvalue DEC .

    $default  reduce using rule 35 (term)


State 84

   48 member: lvalue "LEFT_BRACKET" . expr "RIGHT_BRACKET"

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 125
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 85

   56 normcall: LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 61 (elist)

    expr        go to state 60
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 126
    objectdef   go to state 35
    const       go to state 38


State 86

   47 member: lvalue "." . ID

    ID  shift, and go to state 127


State 87

   57 methodcall: ".." . ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    ID  shift, and go to state 128


State 88

   52 call: lvalue callsuffix .

    $default  reduce using rule 52 (call)


State 89

   54 callsuffix: normcall .

    $default  reduce using rule 54 (callsuffix)


State 90

   55 callsuffix: methodcall .

    $default  reduce using rule 55 (callsuffix)


State 91

   50 member: call "LEFT_BRACKET" . expr "RIGHT_BRACKET"

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 129
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 92

   51 call: call LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 61 (elist)

    expr        go to state 60
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 130
    objectdef   go to state 35
    const       go to state 38


State 93

   49 member: call "." . ID

    ID  shift, and go to state 131


State 94

   89 if: ifprefix stmt .
   91   | ifprefix stmt . elseprefix stmt

    ELSE  shift, and go to state 132

    ELSE      [reduce using rule 89 (if)]
    $default  reduce using rule 89 (if)

    elseprefix  go to state 133


State 95

   96 whilecond: LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 134
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 96

   97 while: whilestart whilecond . loopstmt stmt

    $default  reduce using rule 92 (loopstart)

    loopstart  go to state 135
    loopstmt   go to state 136


State 97

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   88 ifprefix: IF LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    OR                 shift, and go to state 67
    AND                shift, and go to state 68
    ADD                shift, and go to state 69
    SUB                shift, and go to state 70
    MUL                shift, and go to state 71
    DIV                shift, and go to state 72
    MOD                shift, and go to state 73
    EQ                 shift, and go to state 74
    DIF                shift, and go to state 75
    GR                 shift, and go to state 76
    GREQ               shift, and go to state 77
    LESS               shift, and go to state 78
    LESSEQ             shift, and go to state 79
    RIGHT_PARENTHESIS  shift, and go to state 137


State 98

   73 funcdef: FUNCTION ID $@2 . LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 block

    LEFT_PARENTHESIS  shift, and go to state 138


State 99

   77 funcdef: FUNCTION $@5 LEFT_PARENTHESIS . $@6 idlist RIGHT_PARENTHESIS $@7 block

    $default  reduce using rule 75 ($@6)

    $@6  go to state 139


State 100

   99 returnstmt: RETURN expr ";" .

    $default  reduce using rule 99 (returnstmt)


State 101

   53 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 140


State 102

    2 statements: statements . stmt
   69 block: "{" $@1 statements . "}"

    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "{"               shift, and go to state 20
    "}"               shift, and go to state 141
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    ";"               shift, and go to state 23
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    if          go to state 40
    whilestart  go to state 41
    while       go to state 42
    returnstmt  go to state 43


State 103

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   67 indexedelem: "{" expr . ":" expr "}"

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MOD     shift, and go to state 73
    EQ      shift, and go to state 74
    DIF     shift, and go to state 75
    GR      shift, and go to state 76
    GREQ    shift, and go to state 77
    LESS    shift, and go to state 78
    LESSEQ  shift, and go to state 79
    ":"     shift, and go to state 142


State 104

   58 elists: "," . expr elists

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 143
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 105

   60 elist: expr elists .

    $default  reduce using rule 60 (elist)


State 106

   62 objectdef: "LEFT_BRACKET" elist "RIGHT_BRACKET" .

    $default  reduce using rule 62 (objectdef)


State 107

   63 objectdef: "LEFT_BRACKET" indexed "RIGHT_BRACKET" .

    $default  reduce using rule 63 (objectdef)


State 108

   64 indexeds: indexeds . "," indexedelem
   66 indexed: indexedelem indexeds .

    ","  shift, and go to state 144

    $default  reduce using rule 66 (indexed)


State 109

   29 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 29 (term)


State 110

   41 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS .
   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 145

    $default  reduce using rule 41 (primary)


State 111

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   23     | expr OR expr .
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    AND     shift, and go to state 68
    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MOD     shift, and go to state 73
    EQ      shift, and go to state 74
    DIF     shift, and go to state 75
    GR      shift, and go to state 76
    GREQ    shift, and go to state 77
    LESS    shift, and go to state 78
    LESSEQ  shift, and go to state 79

    $default  reduce using rule 23 (expr)


State 112

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   22     | expr AND expr .
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MOD     shift, and go to state 73
    EQ      shift, and go to state 74
    DIF     shift, and go to state 75
    GR      shift, and go to state 76
    GREQ    shift, and go to state 77
    LESS    shift, and go to state 78
    LESSEQ  shift, and go to state 79

    $default  reduce using rule 22 (expr)


State 113

   15 expr: expr . ADD expr
   15     | expr ADD expr .
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    MUL  shift, and go to state 71
    DIV  shift, and go to state 72
    MOD  shift, and go to state 73

    $default  reduce using rule 15 (expr)


State 114

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   16     | expr SUB expr .
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    MUL  shift, and go to state 71
    DIV  shift, and go to state 72
    MOD  shift, and go to state 73

    $default  reduce using rule 16 (expr)


State 115

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   17     | expr MUL expr .
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    $default  reduce using rule 17 (expr)


State 116

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   18     | expr DIV expr .
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    $default  reduce using rule 18 (expr)


State 117

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   19     | expr MOD expr .
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    $default  reduce using rule 19 (expr)


State 118

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   20     | expr EQ expr .
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MOD     shift, and go to state 73
    GR      shift, and go to state 76
    GREQ    shift, and go to state 77
    LESS    shift, and go to state 78
    LESSEQ  shift, and go to state 79

    EQ   error (nonassociative)
    DIF  error (nonassociative)

    $default  reduce using rule 20 (expr)


State 119

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   21     | expr DIF expr .
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MOD     shift, and go to state 73
    GR      shift, and go to state 76
    GREQ    shift, and go to state 77
    LESS    shift, and go to state 78
    LESSEQ  shift, and go to state 79

    EQ   error (nonassociative)
    DIF  error (nonassociative)

    $default  reduce using rule 21 (expr)


State 120

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   27     | expr GR expr .

    ADD  shift, and go to state 69
    SUB  shift, and go to state 70
    MUL  shift, and go to state 71
    DIV  shift, and go to state 72
    MOD  shift, and go to state 73

    GR      error (nonassociative)
    GREQ    error (nonassociative)
    LESS    error (nonassociative)
    LESSEQ  error (nonassociative)

    $default  reduce using rule 27 (expr)


State 121

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   24     | expr GREQ expr .
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    ADD  shift, and go to state 69
    SUB  shift, and go to state 70
    MUL  shift, and go to state 71
    DIV  shift, and go to state 72
    MOD  shift, and go to state 73

    GR      error (nonassociative)
    GREQ    error (nonassociative)
    LESS    error (nonassociative)
    LESSEQ  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 122

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   25     | expr LESS expr .
   26     | expr . LESSEQ expr
   27     | expr . GR expr

    ADD  shift, and go to state 69
    SUB  shift, and go to state 70
    MUL  shift, and go to state 71
    DIV  shift, and go to state 72
    MOD  shift, and go to state 73

    GR      error (nonassociative)
    GREQ    error (nonassociative)
    LESS    error (nonassociative)
    LESSEQ  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 123

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   26     | expr LESSEQ expr .
   27     | expr . GR expr

    ADD  shift, and go to state 69
    SUB  shift, and go to state 70
    MUL  shift, and go to state 71
    DIV  shift, and go to state 72
    MOD  shift, and go to state 73

    GR      error (nonassociative)
    GREQ    error (nonassociative)
    LESS    error (nonassociative)
    LESSEQ  error (nonassociative)

    $default  reduce using rule 26 (expr)


State 124

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   37 assignexpr: lvalue ASSIGNMENT expr .

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MOD     shift, and go to state 73
    EQ      shift, and go to state 74
    DIF     shift, and go to state 75
    GR      shift, and go to state 76
    GREQ    shift, and go to state 77
    LESS    shift, and go to state 78
    LESSEQ  shift, and go to state 79

    $default  reduce using rule 37 (assignexpr)


State 125

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   48 member: lvalue "LEFT_BRACKET" expr . "RIGHT_BRACKET"

    OR               shift, and go to state 67
    AND              shift, and go to state 68
    ADD              shift, and go to state 69
    SUB              shift, and go to state 70
    MUL              shift, and go to state 71
    DIV              shift, and go to state 72
    MOD              shift, and go to state 73
    EQ               shift, and go to state 74
    DIF              shift, and go to state 75
    GR               shift, and go to state 76
    GREQ             shift, and go to state 77
    LESS             shift, and go to state 78
    LESSEQ           shift, and go to state 79
    "RIGHT_BRACKET"  shift, and go to state 146


State 126

   56 normcall: LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 147


State 127

   47 member: lvalue "." ID .

    $default  reduce using rule 47 (member)


State 128

   57 methodcall: ".." ID . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 148


State 129

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   50 member: call "LEFT_BRACKET" expr . "RIGHT_BRACKET"

    OR               shift, and go to state 67
    AND              shift, and go to state 68
    ADD              shift, and go to state 69
    SUB              shift, and go to state 70
    MUL              shift, and go to state 71
    DIV              shift, and go to state 72
    MOD              shift, and go to state 73
    EQ               shift, and go to state 74
    DIF              shift, and go to state 75
    GR               shift, and go to state 76
    GREQ             shift, and go to state 77
    LESS             shift, and go to state 78
    LESSEQ           shift, and go to state 79
    "RIGHT_BRACKET"  shift, and go to state 149


State 130

   51 call: call LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 150


State 131

   49 member: call "." ID .

    $default  reduce using rule 49 (member)


State 132

   90 elseprefix: ELSE .

    $default  reduce using rule 90 (elseprefix)


State 133

   91 if: ifprefix stmt elseprefix . stmt

    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "{"               shift, and go to state 20
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    ";"               shift, and go to state 23
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    stmt        go to state 151
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    if          go to state 40
    whilestart  go to state 41
    while       go to state 42
    returnstmt  go to state 43


State 134

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   96 whilecond: LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt

    OR                 shift, and go to state 67
    AND                shift, and go to state 68
    ADD                shift, and go to state 69
    SUB                shift, and go to state 70
    MUL                shift, and go to state 71
    DIV                shift, and go to state 72
    MOD                shift, and go to state 73
    EQ                 shift, and go to state 74
    DIF                shift, and go to state 75
    GR                 shift, and go to state 76
    GREQ               shift, and go to state 77
    LESS               shift, and go to state 78
    LESSEQ             shift, and go to state 79
    RIGHT_PARENTHESIS  shift, and go to state 152


State 135

   94 loopstmt: loopstart . stmt loopend

    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "{"               shift, and go to state 20
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    ";"               shift, and go to state 23
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    stmt        go to state 153
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    if          go to state 40
    whilestart  go to state 41
    while       go to state 42
    returnstmt  go to state 43


State 136

   97 while: whilestart whilecond loopstmt . stmt

    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "{"               shift, and go to state 20
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    ";"               shift, and go to state 23
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    stmt        go to state 154
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    if          go to state 40
    whilestart  go to state 41
    while       go to state 42
    returnstmt  go to state 43


State 137

   88 ifprefix: IF LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 88 (ifprefix)


State 138

   73 funcdef: FUNCTION ID $@2 LEFT_PARENTHESIS . $@3 idlist RIGHT_PARENTHESIS $@4 block

    $default  reduce using rule 71 ($@3)

    $@3  go to state 155


State 139

   77 funcdef: FUNCTION $@5 LEFT_PARENTHESIS $@6 . idlist RIGHT_PARENTHESIS $@7 block

    ID  shift, and go to state 156

    $default  reduce using rule 87 (idlist)

    idlist  go to state 157


State 140

   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 145


State 141

   69 block: "{" $@1 statements "}" .

    $default  reduce using rule 69 (block)


State 142

   67 indexedelem: "{" expr ":" . expr "}"

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 158
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 143

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   58 elists: "," expr . elists

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MOD     shift, and go to state 73
    EQ      shift, and go to state 74
    DIF     shift, and go to state 75
    GR      shift, and go to state 76
    GREQ    shift, and go to state 77
    LESS    shift, and go to state 78
    LESSEQ  shift, and go to state 79
    ","     shift, and go to state 104

    $default  reduce using rule 59 (elists)

    elists  go to state 159


State 144

   64 indexeds: indexeds "," . indexedelem

    "{"  shift, and go to state 59

    indexedelem  go to state 160


State 145

   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 61 (elist)

    expr        go to state 60
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 161
    objectdef   go to state 35
    const       go to state 38


State 146

   48 member: lvalue "LEFT_BRACKET" expr "RIGHT_BRACKET" .

    $default  reduce using rule 48 (member)


State 147

   56 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 56 (normcall)


State 148

   57 methodcall: ".." ID LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 61 (elist)

    expr        go to state 60
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 162
    objectdef   go to state 35
    const       go to state 38


State 149

   50 member: call "LEFT_BRACKET" expr "RIGHT_BRACKET" .

    $default  reduce using rule 50 (member)


State 150

   51 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 51 (call)


State 151

   91 if: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 91 (if)


State 152

   96 whilecond: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt

    IF                shift, and go to state 4
    WHILE             shift, and go to state 5
    FOR               shift, and go to state 6
    FUNCTION          shift, and go to state 7
    RETURN            shift, and go to state 8
    BREAK             shift, and go to state 9
    CONTINUE          shift, and go to state 10
    LOCAL             shift, and go to state 11
    TRUE              shift, and go to state 12
    FALSE             shift, and go to state 13
    NIL               shift, and go to state 14
    NUMBER            shift, and go to state 15
    NOTOP             shift, and go to state 16
    SUB               shift, and go to state 17
    INC               shift, and go to state 18
    DEC               shift, and go to state 19
    "{"               shift, and go to state 20
    "LEFT_BRACKET"    shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    ";"               shift, and go to state 23
    "::"              shift, and go to state 24
    "string"          shift, and go to state 25
    ID                shift, and go to state 26

    stmt        go to state 163
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifprefix    go to state 39
    if          go to state 40
    whilestart  go to state 41
    while       go to state 42
    returnstmt  go to state 43


State 153

   94 loopstmt: loopstart stmt . loopend

    $default  reduce using rule 93 (loopend)

    loopend  go to state 164


State 154

   97 while: whilestart whilecond loopstmt stmt .

    $default  reduce using rule 97 (while)


State 155

   73 funcdef: FUNCTION ID $@2 LEFT_PARENTHESIS $@3 . idlist RIGHT_PARENTHESIS $@4 block

    ID  shift, and go to state 156

    $default  reduce using rule 87 (idlist)

    idlist  go to state 165


State 156

   86 idlist: ID . $@8 idlists

    $default  reduce using rule 85 ($@8)

    $@8  go to state 166


State 157

   77 funcdef: FUNCTION $@5 LEFT_PARENTHESIS $@6 idlist . RIGHT_PARENTHESIS $@7 block

    RIGHT_PARENTHESIS  shift, and go to state 167


State 158

   15 expr: expr . ADD expr
   16     | expr . SUB expr
   17     | expr . MUL expr
   18     | expr . DIV expr
   19     | expr . MOD expr
   20     | expr . EQ expr
   21     | expr . DIF expr
   22     | expr . AND expr
   23     | expr . OR expr
   24     | expr . GREQ expr
   25     | expr . LESS expr
   26     | expr . LESSEQ expr
   27     | expr . GR expr
   67 indexedelem: "{" expr ":" expr . "}"

    OR      shift, and go to state 67
    AND     shift, and go to state 68
    ADD     shift, and go to state 69
    SUB     shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MOD     shift, and go to state 73
    EQ      shift, and go to state 74
    DIF     shift, and go to state 75
    GR      shift, and go to state 76
    GREQ    shift, and go to state 77
    LESS    shift, and go to state 78
    LESSEQ  shift, and go to state 79
    "}"     shift, and go to state 168


State 159

   58 elists: "," expr elists .

    $default  reduce using rule 58 (elists)


State 160

   64 indexeds: indexeds "," indexedelem .

    $default  reduce using rule 64 (indexeds)


State 161

   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 169


State 162

   57 methodcall: ".." ID LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 170


State 163

   96 whilecond: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt .

    $default  reduce using rule 96 (whilecond)


State 164

   94 loopstmt: loopstart stmt loopend .

    $default  reduce using rule 94 (loopstmt)


State 165

   73 funcdef: FUNCTION ID $@2 LEFT_PARENTHESIS $@3 idlist . RIGHT_PARENTHESIS $@4 block

    RIGHT_PARENTHESIS  shift, and go to state 171


State 166

   86 idlist: ID $@8 . idlists

    $default  reduce using rule 84 (idlists)

    idlists  go to state 172


State 167

   77 funcdef: FUNCTION $@5 LEFT_PARENTHESIS $@6 idlist RIGHT_PARENTHESIS . $@7 block

    $default  reduce using rule 76 ($@7)

    $@7  go to state 173


State 168

   67 indexedelem: "{" expr ":" expr "}" .

    $default  reduce using rule 67 (indexedelem)


State 169

   53 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 53 (call)


State 170

   57 methodcall: ".." ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 57 (methodcall)


State 171

   73 funcdef: FUNCTION ID $@2 LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS . $@4 block

    $default  reduce using rule 72 ($@4)

    $@4  go to state 174


State 172

   83 idlists: idlists . "," ID
   86 idlist: ID $@8 idlists .

    ","  shift, and go to state 175

    $default  reduce using rule 86 (idlist)


State 173

   77 funcdef: FUNCTION $@5 LEFT_PARENTHESIS $@6 idlist RIGHT_PARENTHESIS $@7 . block

    "{"  shift, and go to state 20

    block  go to state 176


State 174

   73 funcdef: FUNCTION ID $@2 LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 . block

    "{"  shift, and go to state 20

    block  go to state 177


State 175

   83 idlists: idlists "," . ID

    ID  shift, and go to state 178


State 176

   77 funcdef: FUNCTION $@5 LEFT_PARENTHESIS $@6 idlist RIGHT_PARENTHESIS $@7 block .

    $default  reduce using rule 77 (funcdef)


State 177

   73 funcdef: FUNCTION ID $@2 LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 block .

    $default  reduce using rule 73 (funcdef)


State 178

   83 idlists: idlists "," ID .

    $default  reduce using rule 83 (idlists)
